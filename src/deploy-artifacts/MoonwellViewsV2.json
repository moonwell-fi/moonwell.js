{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract Comptroller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllMarketsInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isListed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "borrowCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "mintPaused",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "borrowPaused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyRate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyIncentivesPerSec",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIncentivesPerSec",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
              "name": "incentives",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Market[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGovernanceTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MToken",
          "name": "market",
          "type": "address"
        }
      ],
      "name": "getMarketIncentives",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "supplyIncentivesPerSec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowIncentivesPerSec",
              "type": "uint256"
            }
          ],
          "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MToken",
          "name": "_mToken",
          "type": "address"
        }
      ],
      "name": "getMarketInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isListed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "borrowCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "mintPaused",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "borrowPaused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyRate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyIncentivesPerSec",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIncentivesPerSec",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
              "name": "incentives",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Market",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract MToken[]",
          "name": "_mTokens",
          "type": "address[]"
        }
      ],
      "name": "getMarketsInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isListed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "borrowCap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyCap",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "mintPaused",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "borrowPaused",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyRate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyIncentivesPerSec",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIncentivesPerSec",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
              "name": "incentives",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Market[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNativeTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "seizePaused",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferPaused",
              "type": "bool"
            }
          ],
          "internalType": "struct BaseMoonwellViews.ProtocolInfo",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "cooldown",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeWindow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "distributionEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "emissionPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct BaseMoonwellViews.StakingInfo",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTokensBalances",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Balances[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserBalances",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Balances[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserBorrowsBalances",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Balances[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserClaimsVotingPower",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "delegatedVotingPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPower",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegates",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Votes",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserMarketsMemberships",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "membership",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Memberships[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "supplyRewardsAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRewardsAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Rewards[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserStakingInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "cooldown",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pendingRewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            }
          ],
          "internalType": "struct BaseMoonwellViews.UserStakingInfo",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserStakingVotingPower",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "delegatedVotingPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPower",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegates",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Votes",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTokensVotingPower",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "delegatedVotingPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votingPower",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "delegates",
              "type": "address"
            }
          ],
          "internalType": "struct BaseMoonwellViews.Votes",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserVotingPower",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ],
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "claimsVotes",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ],
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "stakingVotes",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ],
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "tokenVotes",
              "type": "tuple"
            }
          ],
          "internalType": "struct BaseMoonwellViews.UserVotes",
          "name": "_result",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_comptroller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenSaleDistributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "safetyModule",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governanceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nativeMarket",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governanceTokenLP",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b613b5480620000f36000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806394c77638116100ad578063cc2a9a5b11610071578063cc2a9a5b14610349578063ce3f8aab1461035e578063e22340c814610371578063ed4e016414610391578063fcf14dd8146103a457600080fd5b806394c776381461028f5780639966ff54146102a5578063a5be5463146102c5578063abd3f612146102d8578063b40cd21d146102eb57600080fd5b80635fe3b567116100f45780635fe3b567146101d65780636e8c5b951461020757806380933608146102275780638843abef1461025c5780638d0d04b91461027c57600080fd5b8063078b0fb7146101315780630baca2e51461015a5780630cf85bcc1461017a5780630dca69f91461019a578063139df200146101c1575b600080fd5b61014461013f366004612d1d565b6103ac565b6040516101519190612d41565b60405180910390f35b61016d610168366004612d1d565b6106ba565b6040516101519190612dd3565b61018d610188366004612d1d565b6106ee565b6040516101519190612f5a565b6101a2610dd9565b6040805182511515815260209283015115159281019290925201610151565b6101c9610ee3565b6040516101519190612f6d565b6000546101ef906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b61021a610215366004612d1d565b611096565b6040516101519190612fcf565b61023a610235366004612d1d565b61125e565b6040805182518152602080840151908201529181015190820152606001610151565b61026f61026a366004612d1d565b6113e4565b6040516101519190612fdd565b6101c961028a366004613028565b6115c3565b6102976116f9565b604051908152602001610151565b6102b86102b3366004612d1d565b6117f7565b604051610151919061309c565b61026f6102d3366004613204565b6119d2565b61026f6102e6366004612d1d565b611ba9565b6102f3611e85565b6040516101519190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b61035c6103573660046132b4565b612140565b005b61021a61036c366004612d1d565b61240c565b61038461037f366004612d1d565b612545565b6040516101519190613336565b61021a61039f366004612d1d565b6127b3565b6102976129f6565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663acc2166a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610402573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610426919061339b565b60405163c9a06b4560e01b81526001600160a01b03858116600483015291925060009183169063c9a06b4590602401600060405180830381865afa158015610472573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261049a91908101906133c3565b90506000805b825181101561053c5760008382815181106104bd576104bd613567565b6020026020010151905060005b816020015151811015610527576000826020015182815181106104ef576104ef613567565b60200260200101519050600081602001511115610514578461051081613593565b9550505b508061051f81613593565b9150506104ca565b5050808061053490613593565b9150506104a0565b506000816001600160401b03811115610557576105576130e9565b6040519080825280602002602001820160405280156105a957816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816105755790505b5090506000915060005b83518110156106b05760008482815181106105d0576105d0613567565b6020026020010151905060005b81602001515181101561069b5760008260200151828151811061060257610602613567565b6020026020010151905060008160200151111561068857604051806080016040528084600001516001600160a01b0316815260200182600001516001600160a01b0316815260200182604001518152602001826060015181525085878151811061066e5761066e613567565b6020026020010181905250858061068490613593565b9650505b508061069381613593565b9150506105dd565b505080806106a890613593565b9150506105b3565b5095945050505050565b6106c2612c04565b6106cb826127b3565b81526106d68261240c565b60208201526106e482611096565b6040820152919050565b6106f6612c36565b6106fe612c36565b60008054604051638e8f294b60e01b81526001600160a01b03868116600483015283926201000090041690638e8f294b906024016040805180830381865afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077291906135bc565b915091508115610dd0576001600160a01b0385811680855260005460405163252c221960e11b8152600481019290925262010000900490911690634a58443290602401602060405180830381865afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f691906135e8565b604084015261080485612b8e565b606084015260c08301819052811515602084015260005460405163731f0c2b60e01b81526001600160a01b038781166004830152620100009092049091169063731f0c2b90602401602060405180830381865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190613601565b15156080840152600054604051636d154ea560e01b81526001600160a01b0387811660048301526201000090920490911690636d154ea590602401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190613601565b151560a0840152600054604080516307dc0d1d60e41b81529051620100009092046001600160a01b031691637dc0d1d0916004808201926020929091908290030181865afa15801561095f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610983919061339b565b60405163fc57d4df60e01b81526001600160a01b038781166004830152919091169063fc57d4df90602401602060405180830381865afa1580156109cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ef91906135e8565b8360e0018181525050846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a91906135e8565b83610100018181525050846001600160a01b03166347bd37186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac691906135e8565b83610120018181525050846001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3291906135e8565b83610140018181525050846001600160a01b0316633b1d21a26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9e91906135e8565b83610160018181525050846001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a91906135e8565b83610180018181525050846001600160a01b031663aa5af0fd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7691906135e8565b836101a0018181525050846001600160a01b031663173b99046040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce291906135e8565b836101c0018181525050846001600160a01b031663cd91801c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e91906135e8565b836101e0018181525050846001600160a01b031663d3bd2c726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba91906135e8565b610200840152610dc985612545565b6102208401525b50909392505050565b6040805180820190915260008082526020820152600060029054906101000a90046001600160a01b03166001600160a01b03166387f763036040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e649190613601565b15156020828101919091526000546040805163ac0b0bb760e01b81529051620100009092046001600160a01b03169263ac0b0bb7926004808401938290030181865afa158015610eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edc9190613601565b1515815290565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663b0772d0b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610f39573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f61919081019061361c565b9050600081516001600160401b03811115610f7e57610f7e6130e9565b604051908082528060200260200182016040528015610fb757816020015b610fa4612c36565b815260200190600190039081610f9c5790505b50905060005b825181101561108f57306001600160a01b0316630cf85bcc848381518110610fe757610fe7613567565b60200260200101516040518263ffffffff1660e01b815260040161101a91906001600160a01b0391909116815260200190565b600060405180830381865afa158015611037573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261105f9190810190613752565b82828151811061107157611071613567565b6020026020010181905250808061108790613593565b915050610fbd565b5092915050565b61109e612cd0565b6003546001600160a01b031615611259576003546000906001600160a01b031663782d6fe1846110cf600143613892565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015611118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113c91906138a5565b600354604051632c3e6f0f60e11b81526001600160a01b0386811660048301526bffffffffffffffffffffffff9390931693506000929091169063587cde1e90602401602060405180830381865afa15801561119c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c0919061339b565b6040805160608101825284815260035491516370a0823160e01b81526001600160a01b0388811660048301529394509092602084019216906370a0823190602401602060405180830381865afa15801561121e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124291906135e8565b8152602001826001600160a01b0316815250925050505b919050565b61128260405180606001604052806000815260200160008152602001600081525090565b6002546001600160a01b031615611259576002546040516346df7f7160e11b81526001600160a01b03848116600483015290911690638dbefee290602401602060405180830381865afa1580156112dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130191906135e8565b602082015260025460405163091030c360e01b81526001600160a01b0384811660048301529091169063091030c390602401602060405180830381865afa158015611350573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137491906135e8565b81526002546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156113c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e491906135e8565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663b0772d0b6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561143a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611462919081019061361c565b9050600081516001600160401b0381111561147f5761147f6130e9565b6040519080825280602002602001820160405280156114c457816020015b604080518082019091526000808252602082015281526020019060019003908161149d5790505b50905060005b82518110156115bb5760008382815181106114e7576114e7613567565b602002602001015190506040518060400160405280826001600160a01b03166395dd9193896040518263ffffffff1660e01b815260040161153791906001600160a01b0391909116815260200190565b602060405180830381865afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157891906135e8565b8152602001826001600160a01b031681525083838151811061159c5761159c613567565b60200260200101819052505080806115b390613593565b9150506114ca565b509392505050565b60606000826001600160401b038111156115df576115df6130e9565b60405190808252806020026020018201604052801561161857816020015b611605612c36565b8152602001906001900390816115fd5790505b50905060005b838110156116ef5730630cf85bcc86868481811061163e5761163e613567565b90506020020160208101906116539190612d1d565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381865afa158015611697573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116bf9190810190613752565b8282815181106116d1576116d1613567565b602002602001018190525080806116e790613593565b91505061161e565b5090505b92915050565b6005546000906001600160a01b0316156117f457600060029054906101000a90046001600160a01b03166001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611784919061339b565b60055460405163fc57d4df60e01b81526001600160a01b03918216600482015291169063fc57d4df90602401602060405180830381865afa1580156117cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f191906135e8565b90505b90565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663b0772d0b6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561184d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611875919081019061361c565b9050600081516001600160401b03811115611892576118926130e9565b6040519080825280602002602001820160405280156118d757816020015b60408051808201909152600080825260208201528152602001906001900390816118b05790505b50905060005b82518110156115bb5760008382815181106118fa576118fa613567565b6020908102919091010151604080518082019182905260005463929fe9a160e01b9092526001600160a01b03898116604483015280841660648301529293509182916201000090041663929fe9a160848301602060405180830381865afa158015611969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198d9190613601565b15158152602001826001600160a01b03168152508383815181106119b3576119b3613567565b60200260200101819052505080806119ca90613593565b9150506118dd565b6060600083516001600160401b038111156119ef576119ef6130e9565b604051908082528060200260200182016040528015611a3457816020015b6040805180820190915260008082526020820152815260200190600190039081611a0d5790505b50905060005b84518110156116ef5760006001600160a01b0316858281518110611a6057611a60613567565b60200260200101516001600160a01b031603611ac1576040518060400160405280856001600160a01b031631815260200160006001600160a01b0316815250828281518110611ab157611ab1613567565b6020026020010181905250611b97565b6000858281518110611ad557611ad5613567565b602002602001015190506040518060400160405280826001600160a01b03166370a08231886040518263ffffffff1660e01b8152600401611b2591906001600160a01b0391909116815260200190565b602060405180830381865afa158015611b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6691906135e8565b8152602001826001600160a01b0316815250838381518110611b8a57611b8a613567565b6020026020010181905250505b80611ba181613593565b915050611a3a565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663b0772d0b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611bff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c27919081019061361c565b9050600081516002611c3991906138d3565b611c449060016138ea565b6003549091506000906001600160a01b031615611c695781611c6581613593565b9250505b6000826001600160401b03811115611c8357611c836130e9565b604051908082528060200260200182016040528015611cac578160200160208202803683370190505b506003549091506001600160a01b031615611d0a5760035481516001600160a01b0390911690829084908110611ce457611ce4613567565b6001600160a01b039092166020928302919091019091015281611d0681613593565b9250505b6000818381518110611d1e57611d1e613567565b6001600160a01b039092166020928302919091019091015281611d4081613593565b92505060005b8451811015611e70576000858281518110611d6357611d63613567565b60209081029190910101516005549091506000906001600160a01b03808416911614611dee57816001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611deb919061339b565b90505b81848681518110611e0157611e01613567565b6001600160a01b03909216602092830291909101909101528084611e268760016138ea565b81518110611e3657611e36613567565b6001600160a01b0390921660209283029190910190910152611e596002866138ea565b945050508080611e6890613593565b915050611d46565b50611e7b81876119d2565b9695505050505050565b611ec56040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6002546001600160a01b0316156117f457600260009054906101000a90046001600160a01b03166001600160a01b03166372b49d636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4d91906135e8565b815260025460408051631ace254b60e11b815290516001600160a01b039092169163359c4a96916004808201926020929091908290030181865afa158015611f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbd91906135e8565b6020808301919091526002546040805163919cd40f60e01b815290516001600160a01b039092169263919cd40f926004808401938290030181865afa15801561200a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202e91906135e8565b60408083019190915260025481516318160ddd60e01b815291516001600160a01b03909116916318160ddd9160048083019260209291908290030181865afa15801561207e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a291906135e8565b6060820152600254604051631e23703160e31b81526001600160a01b039091166004820181905260009163f11b818890602401606060405180830381865afa1580156120f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121169190613914565b80516001600160801b03908116608085015260208201511660a08401526040015160c08301525090565b600054610100900460ff16158080156121605750600054600160ff909116105b8061217a5750303b15801561217a575060005460ff166001145b6121e25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015612205576000805461ff0019166101001790555b6001600160a01b0387166122665760405162461bcd60e51b815260206004820152602260248201527f436f6d7074726f6c6c65722063616e7420626520746865203020616464726573604482015261732160f01b60648201526084016121d9565b86600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060029054906101000a90046001600160a01b03166001600160a01b0316627e3dd26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123039190613601565b6123675760405162461bcd60e51b815260206004820152602f60248201527f43616e742062696e6420746f20736f6d657468696e67207468617473206e6f7460448201526e206120636f6d7074726f6c6c65722160881b60648201526084016121d9565b600180546001600160a01b03199081166001600160a01b0389811691909117909255600280548216888416179055600380548216878416179055600580548216868416179055600480549091169184169190911790558015612403576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b612414612cd0565b6002546001600160a01b031615611259576002546000906001600160a01b031663782d6fe184612445600143613892565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561248e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124b291906135e8565b6040805160608101825282815260025491516370a0823160e01b81526001600160a01b0387811660048301529394509092602084019216906370a0823190602401602060405180830381865afa158015612510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253491906135e8565b815260006020909101529392505050565b606060008060029054906101000a90046001600160a01b03166001600160a01b031663acc2166a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561259b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125bf919061339b565b6040516307e218f960e41b81526001600160a01b038581166004830152919250600091831690637e218f9090602401600060405180830381865afa15801561260b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126339190810190613989565b90506000805b825181101561268d57600083828151811061265657612656613567565b60200260200101519050428160400151111561267a578261267681613593565b9350505b508061268581613593565b915050612639565b506000816001600160401b038111156126a8576126a86130e9565b60405190808252806020026020018201604052801561270657816020015b6126f3604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816126c65790505b5090506000915060005b83518110156106b057600084828151811061272d5761272d613567565b6020026020010151905042816040015111156127a057604051806060016040528082602001516001600160a01b031681526020018260e00151815260200182610100015181525083858151811061278657612786613567565b6020026020010181905250838061279c90613593565b9450505b50806127ab81613593565b915050612710565b6127bb612cd0565b6001546001600160a01b03161561125957600180546000916001600160a01b039091169063782d6fe19085906127f19043613892565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561283a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285e91906135e8565b60015460405163ed361b3560e01b81526001600160a01b0386811660048301529293506000929091169063ed361b3590602401602060405180830381865afa1580156128ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d291906135e8565b600154604051631debb35d60e31b81526001600160a01b0387811660048301529293506000929091169063ef5d9ae890602401602060405180830381865afa158015612922573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061294691906135e8565b600154604051632c3e6f0f60e11b81526001600160a01b0388811660048301529293506000929091169063587cde1e90602401602060405180830381865afa158015612996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ba919061339b565b9050604051806060016040528085815260200183856129d99190613892565b8152602001826001600160a01b0316815250945050505050919050565b6004546000906001600160a01b031615801590612a1d57506005546001600160a01b031615155b156117f4576004805460408051630240bc6b60e21b8152905160009384936001600160a01b031692630902f1ac92818301926060928290030181865afa158015612a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8f9190613ab9565b506001600160701b031691506001600160701b031691506000600460009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b1f919061339b565b6003549091506000906001600160a01b03808416911614612b405783612b42565b825b6003549091506000906001600160a01b03848116911614612b635783612b65565b845b905080612b706116f9565b612b7a90846138d3565b612b849190613afc565b9550505050505090565b600080546040516302c3bcbb60e01b81526001600160a01b03848116600483015262010000909204909116906302c3bcbb90602401602060405180830381865afa158015612be0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f391906135e8565b6040518060600160405280612c17612cd0565b8152602001612c24612cd0565b8152602001612c31612cd0565b905290565b60405180610240016040528060006001600160a01b0316815260200160001515815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b6001600160a01b0381168114612d0f57600080fd5b50565b803561125981612cfa565b600060208284031215612d2f57600080fd5b8135612d3a81612cfa565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015612da457815180516001600160a01b03908116865287820151168786015285810151868601526060908101519085015260809093019290850190600101612d5e565b5091979650505050505050565b80518252602080820151908301526040908101516001600160a01b0316910152565b600061012082019050612de7828451612db1565b6020830151612df96060840182612db1565b50604083015161108f60c0840182612db1565b600081518084526020808501945080840160005b83811015612e5d57815180516001600160a01b03168852602080820151908901526040908101519088015260608701965090820190600101612e20565b509495945050505050565b80516001600160a01b0316825260006102406020830151612e8d602086018215159052565b5060408301516040850152606083015160608501526080830151612eb5608086018215159052565b5060a0830151612ec960a086018215159052565b5060c0838101519085015260e08084015190850152610100808401519085015261012080840151908501526101408084015190850152610160808401519085015261018080840151908501526101a080840151908501526101c080840151908501526101e08084015190850152610200808401519085015261022080840151818601839052611e7b83870182612e0c565b602081526000612d3a6020830184612e68565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612fc257603f19888603018452612fb0858351612e68565b94509285019290850190600101612f94565b5092979650505050505050565b606081016116f38284612db1565b602080825282518282018190526000919060409081850190868401855b82811015612da4578151805185528601516001600160a01b0316868501529284019290850190600101612ffa565b6000806020838503121561303b57600080fd5b82356001600160401b038082111561305257600080fd5b818501915085601f83011261306657600080fd5b81358181111561307557600080fd5b8660208260051b850101111561308a57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919060409081850190868401855b82811015612da45781518051151585528601516001600160a01b03168685015292840192908501906001016130b9565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613121576131216130e9565b60405290565b604051608081016001600160401b0381118282101715613121576131216130e9565b604051606081016001600160401b0381118282101715613121576131216130e9565b60405161024081016001600160401b0381118282101715613121576131216130e9565b60405161012081016001600160401b0381118282101715613121576131216130e9565b604051601f8201601f191681016001600160401b03811182821017156131d9576131d96130e9565b604052919050565b60006001600160401b038211156131fa576131fa6130e9565b5060051b60200190565b6000806040838503121561321757600080fd5b82356001600160401b0381111561322d57600080fd5b8301601f8101851361323e57600080fd5b8035602061325361324e836131e1565b6131b1565b82815260059290921b8301810191818101908884111561327257600080fd5b938201935b8385101561329957843561328a81612cfa565b82529382019390820190613277565b95506132a89050868201612d12565b93505050509250929050565b60008060008060008060c087890312156132cd57600080fd5b86356132d881612cfa565b955060208701356132e881612cfa565b945060408701356132f881612cfa565b9350606087013561330881612cfa565b9250608087013561331881612cfa565b915060a087013561332881612cfa565b809150509295509295509295565b6020808252825182820181905260009190848201906040850190845b8181101561338f57835180516001600160a01b03168452602080820151908501526040908101519084015260608301938501939250600101613352565b50909695505050505050565b6000602082840312156133ad57600080fd5b8151612d3a81612cfa565b805161125981612cfa565b6000602082840312156133d557600080fd5b81516001600160401b03808211156133ec57600080fd5b818401915084601f83011261340057600080fd5b815161340e61324e826131e1565b8082825260208201915060208360051b86010192508783111561343057600080fd5b602085015b8381101561355b5780518581111561344c57600080fd5b86016040818b03601f1901121561346257600080fd5b61346a6130ff565b602082015161347881612cfa565b815260408201518781111561348c57600080fd5b8083019250508a603f8301126134a157600080fd5b60208201516134b261324e826131e1565b81815260079190911b83016040019060208101908d8311156134d357600080fd5b6040850194505b8285101561353c576080858f0312156134f257600080fd5b6134fa613127565b855161350581612cfa565b80825250602086015160208201526040860151604082015260608601516060820152808352506020820191506080850194506134da565b8060208501525050508085525050602083019250602081019050613435565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016135a5576135a561357d565b5060010190565b8051801515811461125957600080fd5b600080604083850312156135cf57600080fd5b6135d8836135ac565b9150602083015190509250929050565b6000602082840312156135fa57600080fd5b5051919050565b60006020828403121561361357600080fd5b612d3a826135ac565b6000602080838503121561362f57600080fd5b82516001600160401b0381111561364557600080fd5b8301601f8101851361365657600080fd5b805161366461324e826131e1565b81815260059190911b8201830190838101908783111561368357600080fd5b928401925b828410156136aa57835161369b81612cfa565b82529284019290840190613688565b979650505050505050565b600082601f8301126136c657600080fd5b815160206136d661324e836131e1565b828152606092830285018201928282019190878511156136f557600080fd5b8387015b858110156137455781818a0312156137115760008081fd5b613719613149565b815161372481612cfa565b815281860151868201526040808301519082015284529284019281016136f9565b5090979650505050505050565b60006020828403121561376457600080fd5b81516001600160401b038082111561377b57600080fd5b90830190610240828603121561379057600080fd5b61379861316b565b6137a1836133b8565b81526137af602084016135ac565b602082015260408301516040820152606083015160608201526137d4608084016135ac565b60808201526137e560a084016135ac565b60a082015260c0838101519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e080840151908201526102008084015190820152610220808401518381111561387557600080fd5b613881888287016136b5565b918301919091525095945050505050565b818103818111156116f3576116f361357d565b6000602082840312156138b757600080fd5b81516bffffffffffffffffffffffff81168114612d3a57600080fd5b80820281158282048414176116f3576116f361357d565b808201808211156116f3576116f361357d565b80516001600160801b038116811461125957600080fd5b60006060828403121561392657600080fd5b61392e613149565b613937836138fd565b8152613945602084016138fd565b6020820152604083015160408201528091505092915050565b80516001600160e01b038116811461125957600080fd5b805163ffffffff8116811461125957600080fd5b6000602080838503121561399c57600080fd5b82516001600160401b038111156139b257600080fd5b8301601f810185136139c357600080fd5b80516139d161324e826131e1565b81815261012091820283018401918482019190888411156139f157600080fd5b938501935b8385101561355b5780858a031215613a0e5760008081fd5b613a1661318e565b613a1f866133b8565b8152613a2c8787016133b8565b81880152604086810151908201526060613a4781880161395e565b908201526080613a58878201613975565b9082015260a0613a6987820161395e565b9082015260c0613a7a878201613975565b9082015260e086810151908201526101008087015190820152835293840193918501916139f6565b80516001600160701b038116811461125957600080fd5b600080600060608486031215613ace57600080fd5b613ad784613aa2565b9250613ae560208501613aa2565b9150613af360408501613aa2565b90509250925092565b600082613b1957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c68d7bf96daf10e8562079ba47bab29015cc8884803a1c3820cb08185160f07d64736f6c63430008130033",
    "sourceMap": "450:3676:104:-:0;;;;;;;;;;;;-1:-1:-1;2929:22:103;:20;:22::i;:::-;450:3676:104;;5917:280:29;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:29;;216:2:116;5976:66:29;;;198:21:116;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:116;;;338:37;392:19;;5976:66:29;;;;;;;;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:29;6118:15;6103:30;;;;;;6152:28;;564:36:116;;;6152:28:29;;552:2:116;537:18;6152:28:29;;;;;;;6052:139;5917:280::o;422:184:116:-;450:3676:104;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "450:3676:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:2020;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9765:309:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4217:1550::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14427:248::-;;;:::i;:::-;;;;5615:13:116;;5608:21;5601:29;5583:48;;5701:4;5689:17;;;5683:24;5676:32;5669:40;5647:20;;;5640:70;;;;5556:18;14427:248:103;5375:341:116;6242:376:103;;;:::i;:::-;;;;;;;:::i;2462:30::-;;;;;;;;-1:-1:-1;;;;;2462:30:103;;;;;;-1:-1:-1;;;;;6751:32:116;;;6733:51;;6721:2;6706:18;2462:30:103;6566:224:116;9138:539:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13944:427::-;;;;;;:::i;:::-;;:::i;:::-;;;;7274:13:116;;7256:32;;7344:4;7332:17;;;7326:24;7304:20;;;7297:54;7395:17;;;7389:24;7367:20;;;7360:54;7244:2;7229:18;13944:427:103;7042:378:116;12438:525:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5833:348::-;;;;;;:::i;:::-;;:::i;14732:251::-;;;:::i;:::-;;;9030:25:116;;;9018:2;9003:18;14732:251:103;8884:177:116;13079:549:103;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10142:685::-;;;;;;:::i;:::-;;:::i;10976:1379::-;;;;;;:::i;:::-;;:::i;6687:766::-;;;:::i;:::-;;;;;;13008:4:116;13050:3;13039:9;13035:19;13027:27;;13087:6;13081:13;13070:9;13063:32;13151:4;13143:6;13139:17;13133:24;13126:4;13115:9;13111:20;13104:54;13214:4;13206:6;13202:17;13196:24;13189:4;13178:9;13174:20;13167:54;13277:4;13269:6;13265:17;13259:24;13252:4;13241:9;13237:20;13230:54;13340:4;13332:6;13328:17;13322:24;13315:4;13304:9;13300:20;13293:54;13403:4;13395:6;13391:17;13385:24;13378:4;13367:9;13363:20;13356:54;13466:4;13458:6;13454:17;13448:24;13441:4;13430:9;13426:20;13419:54;12856:623;;;;;2964:954:103;;;;;;:::i;:::-;;:::i;:::-;;7798:463;;;;;;:::i;:::-;;:::i;656:1372:104:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8347:710:103:-;;;;;;:::i;:::-;;:::i;15048:828::-;;;:::i;2104:2020:104:-;2187:16;2215:35;2298:11;;;;;;;;;-1:-1:-1;;;;;2298:11:104;-1:-1:-1;;;;;2298:29:104;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2434:64;;-1:-1:-1;;;2434:64:104;;-1:-1:-1;;;;;6751:32:116;;;2434:64:104;;;6733:51:116;2215:125:104;;-1:-1:-1;2351:80:104;;2434:57;;;;;6706:18:116;;2434:64:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2434:64:104;;;;;;;;;;;;:::i;:::-;2351:147;;2509:17;2546:10;2541:597;2570:18;:25;2562:5;:33;2541:597;;;2620:75;2698:18;2717:5;2698:25;;;;;;;;:::i;:::-;;;;;;;2620:103;;2759:17;2737:391;2813:11;:19;;;:26;2798:12;:41;2737:391;;;2904:50;2957:11;:40;;;2998:12;2957:54;;;;;;;;:::i;:::-;;;;;;;2904:107;;3056:1;3033:8;:20;;;:24;3029:85;;;3081:14;;;;:::i;:::-;;;;3029:85;-1:-1:-1;2857:14:104;;;;:::i;:::-;;;;2737:391;;;;2606:532;2597:7;;;;;:::i;:::-;;;;2541:597;;;;3148:24;3189:12;-1:-1:-1;;;;;3175:27:104;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:27:104;;-1:-1:-1;;3175:27:104;;;;;;;;;;;;3148:54;;3228:1;3213:16;;3244:10;3239:854;3268:18;:25;3260:5;:33;3239:854;;;3318:75;3396:18;3415:5;3396:25;;;;;;;;:::i;:::-;;;;;;;3318:103;;3457:17;3435:648;3511:11;:19;;;:26;3496:12;:41;3435:648;;;3602:50;3655:11;:40;;;3696:12;3655:54;;;;;;;;:::i;:::-;;;;;;;3602:107;;3754:1;3731:8;:20;;;:24;3727:342;;;3803:211;;;;;;;;3836:11;:18;;;-1:-1:-1;;;;;3803:211:104;;;;;3880:8;:22;;;-1:-1:-1;;;;;3803:211:104;;;;;3928:8;:19;;;3803:211;;;;3973:8;:19;;;3803:211;;;3779:7;3787:12;3779:21;;;;;;;;:::i;:::-;;;;;;:235;;;;4036:14;;;;;:::i;:::-;;;;3727:342;-1:-1:-1;3555:14:104;;;;:::i;:::-;;;;3435:648;;;;3304:789;3295:7;;;;;:::i;:::-;;;;3239:854;;;-1:-1:-1;4110:7:104;2104:2020;-1:-1:-1;;;;;2104:2020:104:o;9765:309:103:-;9851:24;;:::i;:::-;9909:31;9934:5;9909:24;:31::i;:::-;9887:53;;9973:32;9999:5;9973:25;:32::i;:::-;9950:20;;;:55;10036:31;10061:5;10036:24;:31::i;:::-;10015:18;;;:52;:7;9765:309;-1:-1:-1;9765:309:103:o;4217:1550::-;4293:13;;:::i;:::-;4318:21;;:::i;:::-;4351:14;4393:11;;:59;;-1:-1:-1;;;4393:59:103;;-1:-1:-1;;;;;6751:32:116;;;4393:59:103;;;6733:51:116;4351:14:103;;4393:11;;;;;:19;;6706:18:116;;4393:59:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4350:102;;;;4467:9;4463:1273;;;-1:-1:-1;;;;;4492:33:103;;;;;;:14;4559:11;:40;;-1:-1:-1;;;4559:40:103;;;;;6733:51:116;;;;4559:11:103;;;;;;;:22;;6706:18:116;;4559:40:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4539:17;;;:60;4633:32;4656:7;4633:14;:32::i;:::-;4613:17;;;:52;4679:24;;;:44;;;4737:28;;;:16;;;:28;-1:-1:-1;4801:11:103;-1:-1:-1;4801:78:103;-1:-1:-1;;;4801:78:103;;-1:-1:-1;;;;;6751:32:116;;;4801:78:103;;;6733:51:116;4801:11:103;;;;;;;;:30;;6706:18:116;;4801:78:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4780:99;;:18;;;:99;4916:11;;:80;;-1:-1:-1;;;4916:80:103;;-1:-1:-1;;;;;6751:32:116;;;4916:80:103;;;6733:51:116;4916:11:103;;;;;;;;:32;;6706:18:116;;4916:80:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4893:103;;:20;;;:103;5036:11;;:20;;;-1:-1:-1;;;5036:20:103;;;;:11;;;;-1:-1:-1;;;;;5036:11:103;;:18;;:20;;;;;;;;;;;;;;;:11;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;-1:-1:-1;;;5036:78:103;;-1:-1:-1;;;;;6751:32:116;;;5036:78:103;;;6733:51:116;5036:39:103;;;;;;;6706:18:116;;5036:78:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5010:7;:23;;:104;;;;;5150:7;-1:-1:-1;;;;;5150:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5128:7;:19;;:43;;;;;5208:7;-1:-1:-1;;;;;5208:20:103;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5185:7;:20;;:45;;;;;5268:7;-1:-1:-1;;;;;5268:21:103;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5244:7;:21;;:47;;;;;5320:7;-1:-1:-1;;;;;5320:15:103;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5305:7;:12;;:32;;;;;5374:7;-1:-1:-1;;;;;5374:26:103;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5351:7;:20;;:51;;;;;5438:7;-1:-1:-1;;;;;5438:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5416:7;:19;;:43;;;;;5497:7;-1:-1:-1;;;;;5497:29:103;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5473:7;:21;;:55;;;;;5563:7;-1:-1:-1;;;;;5563:30:103;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5542:7;:18;;:53;;;;;5630:7;-1:-1:-1;;;;;5630:30:103;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5609:18;;;:53;5697:28;5717:7;5697:19;:28::i;:::-;5676:18;;;:49;4463:1273;-1:-1:-1;5753:7:103;;4217:1550;-1:-1:-1;;;4217:1550:103:o;14427:248::-;-1:-1:-1;;;;;;;;;;;;;;;;;14567:11:103;;;;;;;;;-1:-1:-1;;;;;14567:11:103;-1:-1:-1;;;;;14567:34:103;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14542:61;;:22;;;;:61;;;;14635:11;;:33;;;-1:-1:-1;;;14635:33:103;;;;:11;;;;-1:-1:-1;;;;;14635:11:103;;:31;;:33;;;;;;;;;;:11;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14613:55;;;;:7;14427:248::o;6242:376::-;6294:15;6321:24;6348:11;;;;;;;;;-1:-1:-1;;;;;6348:11:103;-1:-1:-1;;;;;6348:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6348:27:103;;;;;;;;;;;;:::i;:::-;6321:54;;6386:23;6425:8;:15;-1:-1:-1;;;;;6412:29:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6386:55;;6457:13;6452:135;6484:8;:15;6476:5;:23;6452:135;;;6541:4;-1:-1:-1;;;;;6541:18:103;;6560:8;6569:5;6560:15;;;;;;;;:::i;:::-;;;;;;;6541:35;;;;;;;;;;;;;;-1:-1:-1;;;;;6751:32:116;;;;6733:51;;6721:2;6706:18;;6566:224;6541:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:35:103;;;;;;;;;;;;:::i;:::-;6524:7;6532:5;6524:14;;;;;;;;:::i;:::-;;;;;;:52;;;;6501:7;;;;;:::i;:::-;;;;6452:135;;;-1:-1:-1;6604:7:103;6242:376;-1:-1:-1;;6242:376:103:o;9138:539::-;9230:20;;:::i;:::-;9274:16;;-1:-1:-1;;;;;9274:16:103;9266:39;9262:409;;9340:16;;9321;;-1:-1:-1;;;;;9340:16:103;:30;9388:5;9411:16;9340;9411:12;:16;:::i;:::-;9340:101;;-1:-1:-1;;;;;;9340:101:103;;;;;;;-1:-1:-1;;;;;24366:32:116;;;9340:101:103;;;24348:51:116;24415:18;;;24408:34;24321:18;;9340:101:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9476:16;;:33;;-1:-1:-1;;;9476:33:103;;-1:-1:-1;;;;;6751:32:116;;;9476:33:103;;;6733:51:116;9321:120:103;;;;;;-1:-1:-1;9455:18:103;;9476:16;;;;:26;;6706:18:116;;9476:33:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9533:127;;;;;;;;;;;9585:16;;:33;;-1:-1:-1;;;9585:33:103;;-1:-1:-1;;;;;6751:32:116;;;9585:33:103;;;6733:51:116;9455:54:103;;-1:-1:-1;9533:127:103;;;;;;9585:16;;:26;;6706:18:116;;9585:33:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9533:127;;;;9636:10;-1:-1:-1;;;;;9533:127:103;;;;9523:137;;9307:364;;9262:409;9138:539;;;:::o;13944:427::-;14022:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;14022:30:103;14076:13;;-1:-1:-1;;;;;14076:13:103;14068:36;14064:301;;14145:13;;:73;;-1:-1:-1;;;14145:73:103;;-1:-1:-1;;;;;6751:32:116;;;14145:73:103;;;6733:51:116;14145:13:103;;;;:36;;6706:18:116;;14145:73:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14120:22;;;:98;14251:13;;:37;;-1:-1:-1;;;14251:37:103;;-1:-1:-1;;;;;6751:32:116;;;14251:37:103;;;6733:51:116;14251:13:103;;;;:30;;6706:18:116;;14251:37:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14232:56;;14324:13;;:30;;-1:-1:-1;;;14324:30:103;;-1:-1:-1;;;;;6751:32:116;;;14324:30:103;;;6733:51:116;14324:13:103;;;;:23;;6706:18:116;;14324:30:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12438:525::-;12520:17;12549:24;12576:11;;;;;;;;;-1:-1:-1;;;;;12576:11:103;-1:-1:-1;;;;;12576:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12576:27:103;;;;;;;;;;;;:::i;:::-;12549:54;;12614:25;12657:8;:15;-1:-1:-1;;;;;12642:31:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;12642:31:103;;;;;;;;;;;;;;;;12614:59;;12689:10;12684:248;12713:8;:15;12705:5;:23;12684:248;;;12753:13;12769:8;12778:5;12769:15;;;;;;;;:::i;:::-;;;;;;;12753:31;;12815:106;;;;;;;;12841:6;-1:-1:-1;;;;;12841:26:103;;12868:5;12841:33;;;;;;;;;;;;;;-1:-1:-1;;;;;6751:32:116;;;;6733:51;;6721:2;6706:18;;6566:224;12841:33:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12815:106;;;;12900:6;-1:-1:-1;;;;;12815:106:103;;;;12798:7;12806:5;12798:14;;;;;;;;:::i;:::-;;;;;;:123;;;;12739:193;12730:7;;;;;:::i;:::-;;;;12684:248;;;-1:-1:-1;12949:7:103;12438:525;-1:-1:-1;;;12438:525:103:o;5833:348::-;5922:15;5949:23;5988:8;-1:-1:-1;;;;;5975:29:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5949:55;;6020:13;6015:135;6039:23;;;6015:135;;;6104:4;:18;6123:8;;6132:5;6123:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6104:35;;-1:-1:-1;;;;;;6104:35:103;;;;;;;-1:-1:-1;;;;;6751:32:116;;;6104:35:103;;;6733:51:116;6706:18;;6104:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6104:35:103;;;;;;;;;;;;:::i;:::-;6087:7;6095:5;6087:14;;;;;;;;:::i;:::-;;;;;;:52;;;;6064:7;;;;;:::i;:::-;;;;6015:135;;;-1:-1:-1;6167:7:103;-1:-1:-1;5833:348:103;;;;;:::o;14732:251::-;14820:13;;14784:12;;-1:-1:-1;;;;;14820:13:103;14812:36;14808:169;;14874:11;;;;;;;;;-1:-1:-1;;;;;14874:11:103;-1:-1:-1;;;;;14874:18:103;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14938:13;;14874:92;;-1:-1:-1;;;14874:92:103;;-1:-1:-1;;;;;14938:13:103;;;14874:92;;;6733:51:116;14874:39:103;;;;;6706:18:116;;14874:92:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14864:102;;14808:169;14732:251;:::o;13079:549::-;13164:20;13196:24;13223:11;;;;;;;;;-1:-1:-1;;;;;13223:11:103;-1:-1:-1;;;;;13223:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13223:27:103;;;;;;;;;;;;:::i;:::-;13196:54;;13261:28;13310:8;:15;-1:-1:-1;;;;;13292:34:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;13292:34:103;;;;;;;;;;;;;;;;13261:65;;13342:10;13337:260;13366:8;:15;13358:5;:23;13337:260;;;13406:13;13422:8;13431:5;13422:15;;;;;;;;:::i;:::-;;;;;;;;;;;13468:118;;;;;;;;;;-1:-1:-1;13497:11:103;-1:-1:-1;;;13497:42:103;;;-1:-1:-1;;;;;25256:15:116;;;13497:42:103;;;25238:34:116;25308:15;;;25288:18;;;25281:43;13422:15:103;;-1:-1:-1;13468:118:103;;;13497:11;;;;:27;25173:18:116;;;13497:42:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13468:118;;;;;;13565:6;-1:-1:-1;;;;;13468:118:103;;;;13451:7;13459:5;13451:14;;;;;;;;:::i;:::-;;;;;;:135;;;;13392:205;13383:7;;;;;:::i;:::-;;;;13337:260;;10142:685;10253:17;10282:25;10325:7;:14;-1:-1:-1;;;;;10310:30:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;10310:30:103;;;;;;;;;;;;;;;;10282:58;;10387:10;10382:414;10411:7;:14;10403:5;:22;10382:414;;;10480:1;-1:-1:-1;;;;;10454:28:103;:7;10462:5;10454:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10454:28:103;;10450:336;;10519:35;;;;;;;;10528:5;-1:-1:-1;;;;;10528:13:103;;10519:35;;;;10551:1;-1:-1:-1;;;;;10519:35:103;;;;10502:7;10510:5;10502:14;;;;;;;;:::i;:::-;;;;;;:52;;;;10450:336;;;10593:12;10615:7;10623:5;10615:14;;;;;;;;:::i;:::-;;;;;;;10593:37;;10665:106;;;;;;;;10695:5;-1:-1:-1;;;;;10695:15:103;;10711:5;10695:22;;;;;;;;;;;;;;-1:-1:-1;;;;;6751:32:116;;;;6733:51;;6721:2;6706:18;;6566:224;10695:22:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10665:106;;;;10747:5;-1:-1:-1;;;;;10665:106:103;;;;10648:7;10656:5;10648:14;;;;;;;;:::i;:::-;;;;;;:123;;;;10575:211;10450:336;10427:7;;;;:::i;:::-;;;;10382:414;;10976:1379;11051:17;11080:24;11107:11;;;;;;;;;-1:-1:-1;;;;;11107:11:103;-1:-1:-1;;;;;11107:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11107:27:103;;;;;;;;;;;;:::i;:::-;11080:54;;11197:16;11217:8;:15;11235:1;11217:19;;;;:::i;:::-;11216:25;;11240:1;11216:25;:::i;:::-;11289:16;;11197:44;;-1:-1:-1;11251:15:103;;-1:-1:-1;;;;;11289:16:103;11281:39;11277:83;;11336:13;;;;:::i;:::-;;;;11277:83;11370:24;11411:11;-1:-1:-1;;;;;11397:26:103;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11397:26:103;-1:-1:-1;11475:16:103;;11370:53;;-1:-1:-1;;;;;;11475:16:103;11467:39;11463:143;;11552:16;;11522:19;;-1:-1:-1;;;;;11552:16:103;;;;11522:7;;11530:10;;11522:19;;;;;;:::i;:::-;-1:-1:-1;;;;;11522:47:103;;;:19;;;;;;;;;;;:47;11583:12;;;;:::i;:::-;;;;11463:143;11696:1;11666:7;11674:10;11666:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11666:32:103;;;:19;;;;;;;;;;;:32;11712:12;;;;:::i;:::-;;;;11804:10;11799:499;11828:8;:15;11820:5;:23;11799:499;;;11868:13;11884:8;11893:5;11884:15;;;;;;;;:::i;:::-;;;;;;;;;;;11986:13;;11884:15;;-1:-1:-1;11913:23:103;;-1:-1:-1;;;;;11967:32:103;;;11986:13;;11967:32;11963:181;;12090:6;-1:-1:-1;;;;;12066:43:103;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12019:110;;11963:181;12187:6;12157:7;12165:10;12157:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12157:37:103;;;:19;;;;;;;;;;;:37;12242:15;12208:7;12216:14;:10;12229:1;12216:14;:::i;:::-;12208:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12208:50:103;;;:23;;;;;;;;;;;:50;12272:15;12286:1;12272:15;;:::i;:::-;;;11854:444;;11845:7;;;;;:::i;:::-;;;;11799:499;;;;12315:33;12333:7;12342:5;12315:17;:33::i;:::-;12308:40;10976:1379;-1:-1:-1;;;;;;10976:1379:103:o;6687:766::-;6760:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6760:26:103;6814:13;;-1:-1:-1;;;;;6814:13:103;6806:36;6802:621;;6877:13;;;;;;;;;-1:-1:-1;;;;;6877:13:103;-1:-1:-1;;;;;6877:30:103;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6858:51;;6947:13;;:30;;;-1:-1:-1;;;6947:30:103;;;;-1:-1:-1;;;;;6947:13:103;;;;:28;;:30;;;;;;;;;;;;;;;:13;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6923:21;;;;:54;;;;7017:13;;:32;;;-1:-1:-1;;;7017:32:103;;;;-1:-1:-1;;;;;7017:13:103;;;;:30;;:32;;;;;;;;;;:13;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6991:23;;;;:58;;;;7085:13;;:27;;-1:-1:-1;;;7085:27:103;;;;-1:-1:-1;;;;;7085:13:103;;;;:25;;:27;;;;;;;;;;;;;;:13;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7063:19;;;:49;7176:13;;:61;;-1:-1:-1;;;7176:61:103;;-1:-1:-1;;;;;7176:13:103;;;:61;;;6733:51:116;;;7127:46:103;;7176:37;;6706:18:116;;7176:61:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7279:23;;-1:-1:-1;;;;;7251:51:103;;;:25;;;:51;7346:25;;;;7316:55;:27;;;:55;7401:11;;;7385:13;;;:27;-1:-1:-1;6687:766:103;:::o;2964:954::-;3268:19:29;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:29;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:29;1702:19:40;:23;;;3376:55:29;;-1:-1:-1;3414:12:29;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:29;;26491:2:116;3314:190:29;;;26473:21:116;26530:2;26510:18;;;26503:30;26569:34;26549:18;;;26542:62;-1:-1:-1;;;26620:18:116;;;26613:44;26674:19;;3314:190:29;;;;;;;;;3514:12;:16;;-1:-1:-1;;3514:16:29;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:29;;;;;3540:65;-1:-1:-1;;;;;3273:26:103;::::1;3252:107;;;::::0;-1:-1:-1;;;3252:107:103;;26906:2:116;3252:107:103::1;::::0;::::1;26888:21:116::0;26945:2;26925:18;;;26918:30;26984:34;26964:18;;;26957:62;-1:-1:-1;;;27035:18:116;;;27028:32;27077:19;;3252:107:103::1;26704:398:116::0;3252:107:103::1;3404:12;3370:11;;:48;;;;;-1:-1:-1::0;;;;;3370:48:103::1;;;;;-1:-1:-1::0;;;;;3370:48:103::1;;;;;;3450:11;;;;;;;;;-1:-1:-1::0;;;;;3450:11:103::1;-1:-1:-1::0;;;;;3450:25:103::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3429:121;;;::::0;-1:-1:-1;;;3429:121:103;;27309:2:116;3429:121:103::1;::::0;::::1;27291:21:116::0;27348:2;27328:18;;;27321:30;27387:34;27367:18;;;27360:62;-1:-1:-1;;;27438:18:116;;;27431:45;27493:19;;3429:121:103::1;27107:411:116::0;3429:121:103::1;3561:21;:108:::0;;-1:-1:-1;;;;;;3561:108:103;;::::1;-1:-1:-1::0;;;;;3561:108:103;;::::1;::::0;;;::::1;::::0;;;3680:13:::1;:62:::0;;;::::1;::::0;;::::1;;::::0;;3752:16:::1;:49:::0;;;::::1;::::0;;::::1;;::::0;;3811:13:::1;:28:::0;;;::::1;::::0;;::::1;;::::0;;3849:18:::1;:62:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;3625:99:29;;;;3675:5;3659:21;;-1:-1:-1;;3659:21:29;;;3699:14;;-1:-1:-1;27675:36:116;;3699:14:29;;27663:2:116;27648:18;3699:14:29;;;;;;;3625:99;3258:472;2964:954:103;;;;;;:::o;7798:463::-;7891:20;;:::i;:::-;7935:13;;-1:-1:-1;;;;;7935:13:103;7927:36;7923:332;;7998:13;;7979:16;;-1:-1:-1;;;;;7998:13:103;:27;8043:5;8066:16;7998:13;8066:12;:16;:::i;:::-;7998:98;;-1:-1:-1;;;;;;7998:98:103;;;;;;;-1:-1:-1;;;;;24366:32:116;;;7998:98:103;;;24348:51:116;24415:18;;;24408:34;24321:18;;7998:98:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8120:124;;;;;;;;;;;8172:13;;:30;;-1:-1:-1;;;8172:30:103;;-1:-1:-1;;;;;6751:32:116;;;8172:30:103;;;6733:51:116;8120:124:103;;-1:-1:-1;8120:124:103;;;;;;8172:13;;:23;;6706:18:116;;8172:30:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8120:124;;8228:1;8120:124;;;;;8110:134;7798:463;-1:-1:-1;;;7798:463:103:o;656:1372:104:-;744:25;781:35;864:11;;;;;;;;;-1:-1:-1;;;;;864:11:104;-1:-1:-1;;;;;864:29:104;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;994:39;;-1:-1:-1;;;994:39:104;;-1:-1:-1;;;;;6751:32:116;;;994:39:104;;;6733:51:116;781:125:104;;-1:-1:-1;917:74:104;;994:31;;;;;6706:18:116;;994:39:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:39:104;;;;;;;;;;;;:::i;:::-;917:116;;1044:17;1080:10;1075:280;1104:16;:23;1096:5;:31;1075:280;;;1152:67;1222:16;1239:5;1222:23;;;;;;;;:::i;:::-;;;;;;;1152:93;;1281:15;1263:7;:15;;;:33;1259:86;;;1316:14;;;;:::i;:::-;;;;1259:86;-1:-1:-1;1129:7:104;;;;:::i;:::-;;;;1075:280;;;;1365:33;1437:12;-1:-1:-1;;;;;1401:58:104;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1401:58:104;;;;;;;;;;;;;;;;;1365:94;;1485:1;1470:16;;1501:10;1496:501;1525:16;:23;1517:5;:31;1496:501;;;1573:67;1643:16;1660:5;1643:23;;;;;;;;:::i;:::-;;;;;;;1573:93;;1702:15;1684:7;:15;;;:33;1680:307;;;1761:179;;;;;;;;1799:7;:21;;;-1:-1:-1;;;;;1761:179:104;;;;;1842:7;:29;;;1761:179;;;;1893:7;:29;;;1761:179;;;1737:7;1745:12;1737:21;;;;;;;;:::i;:::-;;;;;;:203;;;;1958:14;;;;;:::i;:::-;;;;1680:307;-1:-1:-1;1550:7:104;;;;:::i;:::-;;;;1496:501;;8347:710:103;8439:20;;:::i;:::-;8483:21;;-1:-1:-1;;;;;8483:21:103;8475:44;8471:580;;8554:21;;;8535:16;;-1:-1:-1;;;;;8554:21:103;;;;:35;;8607:5;;8630:16;;:12;:16;:::i;:::-;8554:106;;-1:-1:-1;;;;;;8554:106:103;;;;;;;-1:-1:-1;;;;;24366:32:116;;;8554:106:103;;;24348:51:116;24415:18;;;24408:34;24321:18;;8554:106:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8697:21;;:43;;-1:-1:-1;;;8697:43:103;;-1:-1:-1;;;;;6751:32:116;;;8697:43:103;;;6733:51:116;8535:125:103;;-1:-1:-1;8674:20:103;;8697:21;;;;:36;;6706:18:116;;8697:43:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8775:21;;:41;;-1:-1:-1;;;8775:41:103;;-1:-1:-1;;;;;6751:32:116;;;8775:41:103;;;6733:51:116;8674:66:103;;-1:-1:-1;8754:18:103;;8775:21;;;;:34;;6706:18:116;;8775:41:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8851:21;;:38;;-1:-1:-1;;;8851:38:103;;-1:-1:-1;;;;;6751:32:116;;;8851:38:103;;;6733:51:116;8754:62:103;;-1:-1:-1;8830:18:103;;8851:21;;;;:31;;6706:18:116;;8851:38:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8830:59;;8913:127;;;;;;;;8936:11;8913:127;;;;8984:13;8966:15;:31;;;;:::i;:::-;8913:127;;;;9016:10;-1:-1:-1;;;;;8913:127:103;;;;8903:137;;8521:530;;;;8347:710;;;:::o;15048:828::-;15153:18;;15104:12;;-1:-1:-1;;;;;15153:18:103;15145:41;;;;:93;;-1:-1:-1;15210:13:103;;-1:-1:-1;;;;;15210:13:103;15202:36;;15145:93;15128:742;;;15300:18;;;:49;;;-1:-1:-1;;;15300:49:103;;;;15264:14;;;;-1:-1:-1;;;;;15300:18:103;;:47;;:49;;;;;;;;;;;:18;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15263:86;-1:-1:-1;;;;;15263:86:103;;;-1:-1:-1;;;;;15263:86:103;;;15363:14;15380:18;;;;;;;;;-1:-1:-1;;;;;15380:18:103;-1:-1:-1;;;;;15380:25:103;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15462:16;;15363:44;;-1:-1:-1;15422:19:103;;-1:-1:-1;;;;;15444:35:103;;;15462:16;;15444:35;:91;;15526:9;15444:91;;;15498:9;15444:91;15588:16;;15422:113;;-1:-1:-1;15549:18:103;;-1:-1:-1;;;;;15570:35:103;;;15588:16;;15570:35;:91;;15652:9;15570:91;;;15624:9;15570:91;15549:112;;15846:13;15821:21;:19;:21::i;:::-;15804:38;;:14;:38;:::i;:::-;15803:56;;;;:::i;:::-;15793:66;;15249:621;;;;;15048:828;:::o;502:148:104:-;589:4;612:11;;:31;;-1:-1:-1;;;612:31:104;;-1:-1:-1;;;;;6751:32:116;;;612:31:104;;;6733:51:116;612:11:104;;;;;;;;:22;;6706:18:116;;612:31:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:116:-;-1:-1:-1;;;;;89:31:116;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:134::-;218:20;;247:31;218:20;247:31;:::i;289:247::-;348:6;401:2;389:9;380:7;376:23;372:32;369:52;;;417:1;414;407:12;369:52;456:9;443:23;475:31;500:5;475:31;:::i;:::-;525:5;289:247;-1:-1:-1;;;289:247:116:o;650:985::-;873:2;925:21;;;995:13;;898:18;;;1017:22;;;844:4;;873:2;1058;;1076:18;;;;1117:15;;;844:4;1160:449;1174:6;1171:1;1168:13;1160:449;;;1233:13;;1317:9;;-1:-1:-1;;;;;1313:18:116;;;1301:31;;1376:11;;;1370:18;1366:27;1352:12;;;1345:49;1434:11;;;1428:18;1414:12;;;1407:40;1470:4;1514:11;;;1508:18;1494:12;;;1487:40;1556:4;1547:14;;;;1584:15;;;;1286:1;1189:9;1160:449;;;-1:-1:-1;1626:3:116;;650:985;-1:-1:-1;;;;;;;650:985:116:o;1640:228::-;1711:12;;1699:25;;1773:4;1762:16;;;1756:23;1740:14;;;1733:47;1833:4;1822:16;;;1816:23;-1:-1:-1;;;;;1812:49:116;1796:14;;1789:73;1640:228::o;1873:504::-;2021:4;2063:3;2052:9;2048:19;2040:27;;2076:49;2115:9;2106:6;2100:13;2076:49;:::i;:::-;2172:4;2164:6;2160:17;2154:24;2187:59;2240:4;2229:9;2225:20;2211:12;2187:59;:::i;:::-;;2295:4;2287:6;2283:17;2277:24;2310:61;2365:4;2354:9;2350:20;2334:14;2310:61;:::i;3055:464::-;3124:3;3162:5;3156:12;3189:6;3184:3;3177:19;3215:4;3244:2;3239:3;3235:12;3228:19;;3281:2;3274:5;3270:14;3302:1;3312:182;3326:6;3323:1;3320:13;3312:182;;;3427:13;;2857;;-1:-1:-1;;;;;2853:39:116;2841:52;;2943:4;2931:17;;;2925:24;2909:14;;;2902:48;3000:4;2988:17;;;2982:24;2966:14;;;2959:48;3039:4;3030:14;;3375:71;-1:-1:-1;3469:15:116;;;;3348:1;3341:9;3312:182;;;-1:-1:-1;3510:3:116;;3055:464;-1:-1:-1;;;;;3055:464:116:o;3524:1584::-;3635:12;;-1:-1:-1;;;;;607:31:116;595:44;;3573:3;3601:6;3699:4;3692:5;3688:16;3682:23;3714:45;3753:4;3748:3;3744:14;3730:12;2720:13;2713:21;2701:34;;2650:91;3714:45;;3808:4;3801:5;3797:16;3791:23;3784:4;3779:3;3775:14;3768:47;3864:4;3857:5;3853:16;3847:23;3840:4;3835:3;3831:14;3824:47;3919:4;3912:5;3908:16;3902:23;3934:47;3975:4;3970:3;3966:14;3950;2720:13;2713:21;2701:34;;2650:91;3934:47;;4029:4;4022:5;4018:16;4012:23;4044:47;4085:4;4080:3;4076:14;4060;2720:13;2713:21;2701:34;;2650:91;4044:47;-1:-1:-1;4140:4:116;4129:16;;;4123:23;4107:14;;;4100:47;4196:4;4185:16;;;4179:23;4163:14;;;4156:47;4222:6;4264:14;;;4258:21;4244:12;;;4237:43;4299:6;4341:14;;;4335:21;4321:12;;;4314:43;4376:6;4418:14;;;4412:21;4398:12;;;4391:43;4453:6;4495:14;;;4489:21;4475:12;;;4468:43;4530:6;4572:14;;;4566:21;4552:12;;;4545:43;4607:6;4649:14;;;4643:21;4629:12;;;4622:43;4684:6;4726:14;;;4720:21;4706:12;;;4699:43;4761:6;4803:14;;;4797:21;4783:12;;;4776:43;4839:6;4882:15;;;4876:22;4861:13;;;4854:45;4919:6;4962:15;;;4956:22;4994:13;;;4987:25;;;5028:74;5089:12;;;4956:22;5028:74;:::i;5113:257::-;5292:2;5281:9;5274:21;5255:4;5312:52;5360:2;5349:9;5345:18;5337:6;5312:52;:::i;5721:840::-;5913:4;5942:2;5982;5971:9;5967:18;6012:2;6001:9;5994:21;6035:6;6070;6064:13;6101:6;6093;6086:22;6139:2;6128:9;6124:18;6117:25;;6201:2;6191:6;6188:1;6184:14;6173:9;6169:30;6165:39;6151:53;;6239:2;6231:6;6227:15;6260:1;6270:262;6284:6;6281:1;6278:13;6270:262;;;6377:2;6373:7;6361:9;6353:6;6349:22;6345:36;6340:3;6333:49;6405:47;6445:6;6436;6430:13;6405:47;:::i;:::-;6395:57;-1:-1:-1;6510:12:116;;;;6475:15;;;;6306:1;6299:9;6270:262;;;-1:-1:-1;6549:6:116;;5721:840;-1:-1:-1;;;;;;;5721:840:116:o;6795:242::-;6977:2;6962:18;;6989:42;6966:9;7013:6;6989:42;:::i;7425:818::-;7650:2;7702:21;;;7772:13;;7675:18;;;7794:22;;;7621:4;;7650:2;7835;;7853:18;;;;7894:15;;;7621:4;7937:280;7951:6;7948:1;7945:13;7937:280;;;8010:13;;8048:9;;8036:22;;8102:11;;8096:18;-1:-1:-1;;;;;8092:44:116;8078:12;;;8071:66;8157:12;;;;8192:15;;;;8133:1;7966:9;7937:280;;8248:631;8350:6;8358;8411:2;8399:9;8390:7;8386:23;8382:32;8379:52;;;8427:1;8424;8417:12;8379:52;8467:9;8454:23;-1:-1:-1;;;;;8537:2:116;8529:6;8526:14;8523:34;;;8553:1;8550;8543:12;8523:34;8591:6;8580:9;8576:22;8566:32;;8636:7;8629:4;8625:2;8621:13;8617:27;8607:55;;8658:1;8655;8648:12;8607:55;8698:2;8685:16;8724:2;8716:6;8713:14;8710:34;;;8740:1;8737;8730:12;8710:34;8793:7;8788:2;8778:6;8775:1;8771:14;8767:2;8763:23;8759:32;8756:45;8753:65;;;8814:1;8811;8804:12;8753:65;8845:2;8837:11;;;;;8867:6;;-1:-1:-1;8248:631:116;;-1:-1:-1;;;;8248:631:116:o;9066:840::-;9297:2;9349:21;;;9419:13;;9322:18;;;9441:22;;;9268:4;;9297:2;9482;;9500:18;;;;9541:15;;;9268:4;9584:296;9598:6;9595:1;9592:13;9584:296;;;9657:13;;9709:9;;9702:17;9695:25;9683:38;;9765:11;;9759:18;-1:-1:-1;;;;;9755:44:116;9741:12;;;9734:66;9820:12;;;;9855:15;;;;9796:1;9613:9;9584:296;;9911:127;9972:10;9967:3;9963:20;9960:1;9953:31;10003:4;10000:1;9993:15;10027:4;10024:1;10017:15;10043:257;10115:4;10109:11;;;10147:17;;-1:-1:-1;;;;;10179:34:116;;10215:22;;;10176:62;10173:88;;;10241:18;;:::i;:::-;10277:4;10270:24;10043:257;:::o;10305:253::-;10377:2;10371:9;10419:4;10407:17;;-1:-1:-1;;;;;10439:34:116;;10475:22;;;10436:62;10433:88;;;10501:18;;:::i;10563:253::-;10635:2;10629:9;10677:4;10665:17;;-1:-1:-1;;;;;10697:34:116;;10733:22;;;10694:62;10691:88;;;10759:18;;:::i;10821:255::-;10893:2;10887:9;10935:6;10923:19;;-1:-1:-1;;;;;10957:34:116;;10993:22;;;10954:62;10951:88;;;11019:18;;:::i;11081:255::-;11153:2;11147:9;11195:6;11183:19;;-1:-1:-1;;;;;11217:34:116;;11253:22;;;11214:62;11211:88;;;11279:18;;:::i;11341:275::-;11412:2;11406:9;11477:2;11458:13;;-1:-1:-1;;11454:27:116;11442:40;;-1:-1:-1;;;;;11497:34:116;;11533:22;;;11494:62;11491:88;;;11559:18;;:::i;:::-;11595:2;11588:22;11341:275;;-1:-1:-1;11341:275:116:o;11621:183::-;11681:4;-1:-1:-1;;;;;11706:6:116;11703:30;11700:56;;;11736:18;;:::i;:::-;-1:-1:-1;11781:1:116;11777:14;11793:4;11773:25;;11621:183::o;11809:1042::-;11902:6;11910;11963:2;11951:9;11942:7;11938:23;11934:32;11931:52;;;11979:1;11976;11969:12;11931:52;12019:9;12006:23;-1:-1:-1;;;;;12044:6:116;12041:30;12038:50;;;12084:1;12081;12074:12;12038:50;12107:22;;12160:4;12152:13;;12148:27;-1:-1:-1;12138:55:116;;12189:1;12186;12179:12;12138:55;12225:2;12212:16;12247:4;12271:60;12287:43;12327:2;12287:43;:::i;:::-;12271:60;:::i;:::-;12365:15;;;12447:1;12443:10;;;;12435:19;;12431:28;;;12396:12;;;;12471:19;;;12468:39;;;12503:1;12500;12493:12;12468:39;12527:11;;;;12547:217;12563:6;12558:3;12555:15;12547:217;;;12643:3;12630:17;12660:31;12685:5;12660:31;:::i;:::-;12704:18;;12580:12;;;;12742;;;;12547:217;;;12783:5;-1:-1:-1;12807:38:116;;-1:-1:-1;12826:18:116;;;12807:38;:::i;:::-;12797:48;;;;;11809:1042;;;;;:::o;13484:955::-;13588:6;13596;13604;13612;13620;13628;13681:3;13669:9;13660:7;13656:23;13652:33;13649:53;;;13698:1;13695;13688:12;13649:53;13737:9;13724:23;13756:31;13781:5;13756:31;:::i;:::-;13806:5;-1:-1:-1;13863:2:116;13848:18;;13835:32;13876:33;13835:32;13876:33;:::i;:::-;13928:7;-1:-1:-1;13987:2:116;13972:18;;13959:32;14000:33;13959:32;14000:33;:::i;:::-;14052:7;-1:-1:-1;14111:2:116;14096:18;;14083:32;14124:33;14083:32;14124:33;:::i;:::-;14176:7;-1:-1:-1;14235:3:116;14220:19;;14207:33;14249;14207;14249;:::i;:::-;14301:7;-1:-1:-1;14360:3:116;14345:19;;14332:33;14374;14332;14374;:::i;:::-;14426:7;14416:17;;;13484:955;;;;;;;;:::o;14444:715::-;14685:2;14737:21;;;14807:13;;14710:18;;;14829:22;;;14656:4;;14685:2;14908:15;;;;14882:2;14867:18;;;14656:4;14951:182;14965:6;14962:1;14959:13;14951:182;;;15066:13;;2857;;-1:-1:-1;;;;;2853:39:116;2841:52;;2943:4;2931:17;;;2925:24;2909:14;;;2902:48;3000:4;2988:17;;;2982:24;2966:14;;;2959:48;3039:4;3030:14;;15108:15;;;;15014:71;-1:-1:-1;14987:1:116;14980:9;14951:182;;;-1:-1:-1;15150:3:116;;14444:715;-1:-1:-1;;;;;;14444:715:116:o;15164:283::-;15266:6;15319:2;15307:9;15298:7;15294:23;15290:32;15287:52;;;15335:1;15332;15325:12;15287:52;15367:9;15361:16;15386:31;15411:5;15386:31;:::i;15660:138::-;15739:13;;15761:31;15739:13;15761:31;:::i;15803:2548::-;15933:6;15986:2;15974:9;15965:7;15961:23;15957:32;15954:52;;;16002:1;15999;15992:12;15954:52;16035:9;16029:16;-1:-1:-1;;;;;16105:2:116;16097:6;16094:14;16091:34;;;16121:1;16118;16111:12;16091:34;16159:6;16148:9;16144:22;16134:32;;16204:7;16197:4;16193:2;16189:13;16185:27;16175:55;;16226:1;16223;16216:12;16175:55;16255:2;16249:9;16278:60;16294:43;16334:2;16294:43;:::i;16278:60::-;16360:3;16384:2;16379:3;16372:15;16412:2;16407:3;16403:12;16396:19;;16463:2;16457;16454:1;16450:10;16446:2;16442:19;16438:28;16424:42;;16489:7;16481:6;16478:19;16475:39;;;16510:1;16507;16500:12;16475:39;16542:2;16538;16534:11;16554:1767;16570:6;16565:3;16562:15;16554:1767;;;16649:3;16643:10;16685:2;16672:11;16669:19;16666:39;;;16701:1;16698;16691:12;16666:39;16728:20;;16800:4;16772:16;;;-1:-1:-1;;16768:30:116;16764:41;16761:61;;;16818:1;16815;16808:12;16761:61;16848:22;;:::i;:::-;16912:2;16908;16904:11;16898:18;16929:33;16954:7;16929:33;:::i;:::-;16975:22;;17040:4;17032:13;;17026:20;17062:16;;;17059:36;;;17091:1;17088;17081:12;17059:36;17126:8;17122:2;17118:17;17108:27;;;17175:7;17170:2;17166;17162:11;17158:25;17148:53;;17197:1;17194;17187:12;17148:53;17238:2;17234;17230:11;17224:18;17268:60;17284:43;17324:2;17284:43;:::i;17268:60::-;17372:17;;;17470:1;17466:10;;;;17458:19;;17479:4;17454:30;;17422:2;17411:14;;;17500:21;;;17497:41;;;17534:1;17531;17524:12;17497:41;17572:4;17568:2;17564:13;17551:26;;17590:616;17608:8;17601:5;17598:19;17590:616;;;17706:4;17698:5;17689:7;17685:19;17681:30;17678:50;;;17724:1;17721;17714:12;17678:50;17760:22;;:::i;:::-;17820:5;17814:12;17843:33;17868:7;17843:33;:::i;:::-;17909:7;17900;17893:24;;17976:2;17969:5;17965:14;17959:21;17954:2;17945:7;17941:16;17934:47;18042:4;18035:5;18031:16;18025:23;18018:4;18009:7;18005:18;17998:51;18108:2;18101:5;18097:14;18091:21;18086:2;18077:7;18073:16;18066:47;18144:7;18137:5;18130:22;;18189:2;18182:5;18178:14;18169:23;;17640:4;17633:5;17629:16;17620:25;;17590:616;;;18242:5;18237:2;18230:5;18226:14;18219:29;;;;18273:5;18268:3;18261:18;;;18308:2;18303:3;18299:12;18292:19;;16596:2;16591:3;16587:12;16580:19;;16554:1767;;;-1:-1:-1;18340:5:116;15803:2548;-1:-1:-1;;;;;;;15803:2548:116:o;18356:127::-;18417:10;18412:3;18408:20;18405:1;18398:31;18448:4;18445:1;18438:15;18472:4;18469:1;18462:15;18488:127;18549:10;18544:3;18540:20;18537:1;18530:31;18580:4;18577:1;18570:15;18604:4;18601:1;18594:15;18620:135;18659:3;18680:17;;;18677:43;;18700:18;;:::i;:::-;-1:-1:-1;18747:1:116;18736:13;;18620:135::o;18760:164::-;18836:13;;18885;;18878:21;18868:32;;18858:60;;18914:1;18911;18904:12;18929:263;19005:6;19013;19066:2;19054:9;19045:7;19041:23;19037:32;19034:52;;;19082:1;19079;19072:12;19034:52;19105:37;19132:9;19105:37;:::i;:::-;19095:47;;19182:2;19171:9;19167:18;19161:25;19151:35;;18929:263;;;;;:::o;19197:184::-;19267:6;19320:2;19308:9;19299:7;19295:23;19291:32;19288:52;;;19336:1;19333;19326:12;19288:52;-1:-1:-1;19359:16:116;;19197:184;-1:-1:-1;19197:184:116:o;19386:202::-;19453:6;19506:2;19494:9;19485:7;19481:23;19477:32;19474:52;;;19522:1;19519;19512:12;19474:52;19545:37;19572:9;19545:37;:::i;20094:972::-;20205:6;20236:2;20279;20267:9;20258:7;20254:23;20250:32;20247:52;;;20295:1;20292;20285:12;20247:52;20328:9;20322:16;-1:-1:-1;;;;;20353:6:116;20350:30;20347:50;;;20393:1;20390;20383:12;20347:50;20416:22;;20469:4;20461:13;;20457:27;-1:-1:-1;20447:55:116;;20498:1;20495;20488:12;20447:55;20527:2;20521:9;20550:60;20566:43;20606:2;20566:43;:::i;20550:60::-;20644:15;;;20726:1;20722:10;;;;20714:19;;20710:28;;;20675:12;;;;20750:19;;;20747:39;;;20782:1;20779;20772:12;20747:39;20806:11;;;;20826:210;20842:6;20837:3;20834:15;20826:210;;;20915:3;20909:10;20932:31;20957:5;20932:31;:::i;:::-;20976:18;;20859:12;;;;21014;;;;20826:210;;;21055:5;20094:972;-1:-1:-1;;;;;;;20094:972:116:o;21071:1123::-;21152:5;21205:3;21198:4;21190:6;21186:17;21182:27;21172:55;;21223:1;21220;21213:12;21172:55;21252:6;21246:13;21278:4;21302:60;21318:43;21358:2;21318:43;:::i;21302:60::-;21396:15;;;21458:4;21501:11;;;21489:24;;21485:33;;;21427:12;;;;21384:3;21530:15;;;21527:35;;;21558:1;21555;21548:12;21527:35;21594:2;21586:6;21582:15;21606:559;21622:6;21617:3;21614:15;21606:559;;;21698:2;21692:3;21687;21683:13;21679:22;21676:112;;;21742:1;21771:2;21767;21760:14;21676:112;21814:22;;:::i;:::-;21870:3;21864:10;21887:33;21912:7;21887:33;:::i;:::-;21933:22;;21997:12;;;21991:19;21975:14;;;21968:43;22034:2;22078:12;;;22072:19;22056:14;;;22049:43;22105:18;;22143:12;;;;21639;;21606:559;;;-1:-1:-1;22183:5:116;;21071:1123;-1:-1:-1;;;;;;;21071:1123:116:o;22199:1837::-;22294:6;22347:2;22335:9;22326:7;22322:23;22318:32;22315:52;;;22363:1;22360;22353:12;22315:52;22396:9;22390:16;-1:-1:-1;;;;;22466:2:116;22458:6;22455:14;22452:34;;;22482:1;22479;22472:12;22452:34;22505:22;;;;22561:6;22543:16;;;22539:29;22536:49;;;22581:1;22578;22571:12;22536:49;22607:22;;:::i;:::-;22652:33;22682:2;22652:33;:::i;:::-;22645:5;22638:48;22718:39;22753:2;22749;22745:11;22718:39;:::i;:::-;22713:2;22706:5;22702:14;22695:63;22804:2;22800;22796:11;22790:18;22785:2;22778:5;22774:14;22767:42;22855:2;22851;22847:11;22841:18;22836:2;22829:5;22825:14;22818:42;22893:40;22928:3;22924:2;22920:12;22893:40;:::i;:::-;22887:3;22880:5;22876:15;22869:65;22967:40;23002:3;22998:2;22994:12;22967:40;:::i;:::-;22961:3;22950:15;;22943:65;23055:3;23047:12;;;23041:19;23024:15;;;23017:44;23108:3;23100:12;;;23094:19;23077:15;;;23070:44;23133:3;23174:11;;;23168:18;23152:14;;;23145:42;23206:3;23247:11;;;23241:18;23225:14;;;23218:42;23279:3;23320:11;;;23314:18;23298:14;;;23291:42;23352:3;23393:11;;;23387:18;23371:14;;;23364:42;23425:3;23466:11;;;23460:18;23444:14;;;23437:42;23498:3;23539:11;;;23533:18;23517:14;;;23510:42;23571:3;23612:11;;;23606:18;23590:14;;;23583:42;23645:3;23687:12;;;23681:19;23664:15;;;23657:44;23721:3;23763:12;;;23757:19;23740:15;;;23733:44;23797:3;23831:12;;;23825:19;23856:16;;;23853:36;;;23885:1;23882;23875:12;23853:36;23922:83;23997:7;23986:8;23982:2;23978:17;23922:83;:::i;:::-;23905:15;;;23898:108;;;;-1:-1:-1;23909:5:116;22199:1837;-1:-1:-1;;;;;22199:1837:116:o;24041:128::-;24108:9;;;24129:11;;;24126:37;;;24143:18;;:::i;24453:296::-;24522:6;24575:2;24563:9;24554:7;24550:23;24546:32;24543:52;;;24591:1;24588;24581:12;24543:52;24623:9;24617:16;24673:26;24666:5;24662:38;24655:5;24652:49;24642:77;;24715:1;24712;24705:12;25335:168;25408:9;;;25439;;25456:15;;;25450:22;;25436:37;25426:71;;25477:18;;:::i;25508:125::-;25573:9;;;25594:10;;;25591:36;;;25607:18;;:::i;25638:192::-;25717:13;;-1:-1:-1;;;;;25759:46:116;;25749:57;;25739:85;;25820:1;25817;25810:12;25835:449;25933:6;25986:2;25974:9;25965:7;25961:23;25957:32;25954:52;;;26002:1;25999;25992:12;25954:52;26028:22;;:::i;:::-;26073:40;26103:9;26073:40;:::i;:::-;26066:5;26059:55;26146:49;26191:2;26180:9;26176:18;26146:49;:::i;:::-;26141:2;26134:5;26130:14;26123:73;26249:2;26238:9;26234:18;26228:25;26223:2;26216:5;26212:14;26205:49;26273:5;26263:15;;;25835:449;;;;:::o;27722:177::-;27801:13;;-1:-1:-1;;;;;27843:31:116;;27833:42;;27823:70;;27889:1;27886;27879:12;27904:167;27982:13;;28035:10;28024:22;;28014:33;;28004:61;;28061:1;28058;28051:12;28076:1927;28202:6;28233:2;28276;28264:9;28255:7;28251:23;28247:32;28244:52;;;28292:1;28289;28282:12;28244:52;28325:9;28319:16;-1:-1:-1;;;;;28350:6:116;28347:30;28344:50;;;28390:1;28387;28380:12;28344:50;28413:22;;28466:4;28458:13;;28454:27;-1:-1:-1;28444:55:116;;28495:1;28492;28485:12;28444:55;28524:2;28518:9;28547:60;28563:43;28603:2;28563:43;:::i;28547:60::-;28641:15;;;28703:6;28744:11;;;28736:20;;28732:29;;;28672:12;;;;28629:3;28773:19;;;28770:39;;;28805:1;28802;28795:12;28770:39;28829:11;;;;28849:1124;28865:6;28860:3;28857:15;28849:1124;;;28945:2;28939:3;28930:7;28926:17;28922:26;28919:116;;;28989:1;29018:2;29014;29007:14;28919:116;29061:22;;:::i;:::-;29110:34;29140:3;29110:34;:::i;:::-;29103:5;29096:49;29181:43;29220:2;29215:3;29211:12;29181:43;:::i;:::-;29165:14;;;29158:67;29248:2;29292:12;;;29286:19;29270:14;;;29263:43;29329:2;29367:43;29397:12;;;29367:43;:::i;:::-;29351:14;;;29344:67;29434:3;29473:42;29502:12;;;29473:42;:::i;:::-;29457:14;;;29450:66;29539:3;29578:43;29608:12;;;29578:43;:::i;:::-;29562:14;;;29555:67;29646:3;29686:43;29715:13;;;29686:43;:::i;:::-;29669:15;;;29662:68;29754:3;29800:13;;;29794:20;29777:15;;;29770:45;29839:3;29885:13;;;29879:20;29862:15;;;29855:45;29913:18;;28882:12;;;;29951;;;;28849:1124;;30008:188;30087:13;;-1:-1:-1;;;;;30129:42:116;;30119:53;;30109:81;;30186:1;30183;30176:12;30201:378;30289:6;30297;30305;30358:2;30346:9;30337:7;30333:23;30329:32;30326:52;;;30374:1;30371;30364:12;30326:52;30397:40;30427:9;30397:40;:::i;:::-;30387:50;;30456:49;30501:2;30490:9;30486:18;30456:49;:::i;:::-;30446:59;;30524:49;30569:2;30558:9;30554:18;30524:49;:::i;:::-;30514:59;;30201:378;;;;;:::o;30584:217::-;30624:1;30650;30640:132;;30694:10;30689:3;30685:20;30682:1;30675:31;30729:4;30726:1;30719:15;30757:4;30754:1;30747:15;30640:132;-1:-1:-1;30786:9:116;;30584:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "comptroller()": "5fe3b567",
    "getAllMarketsInfo()": "139df200",
    "getGovernanceTokenPrice()": "fcf14dd8",
    "getMarketIncentives(address)": "e22340c8",
    "getMarketInfo(address)": "0cf85bcc",
    "getMarketsInfo(address[])": "8d0d04b9",
    "getNativeTokenPrice()": "94c77638",
    "getProtocolInfo()": "0dca69f9",
    "getStakingInfo()": "b40cd21d",
    "getTokensBalances(address[],address)": "a5be5463",
    "getUserBalances(address)": "abd3f612",
    "getUserBorrowsBalances(address)": "8843abef",
    "getUserClaimsVotingPower(address)": "ed4e0164",
    "getUserMarketsMemberships(address)": "9966ff54",
    "getUserRewards(address)": "078b0fb7",
    "getUserStakingInfo(address)": "80933608",
    "getUserStakingVotingPower(address)": "ce3f8aab",
    "getUserTokensVotingPower(address)": "6e8c5b95",
    "getUserVotingPower(address)": "0baca2e5",
    "initialize(address,address,address,address,address,address)": "cc2a9a5b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract Comptroller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllMarketsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrowCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowPaused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyIncentivesPerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIncentivesPerSec\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.MarketIncentives[]\",\"name\":\"incentives\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BaseMoonwellViews.Market[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernanceTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract MToken\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"getMarketIncentives\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyIncentivesPerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIncentivesPerSec\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.MarketIncentives[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract MToken\",\"name\":\"_mToken\",\"type\":\"address\"}],\"name\":\"getMarketInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrowCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowPaused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyIncentivesPerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIncentivesPerSec\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.MarketIncentives[]\",\"name\":\"incentives\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BaseMoonwellViews.Market\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract MToken[]\",\"name\":\"_mTokens\",\"type\":\"address[]\"}],\"name\":\"getMarketsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrowCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowPaused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyIncentivesPerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowIncentivesPerSec\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.MarketIncentives[]\",\"name\":\"incentives\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BaseMoonwellViews.Market[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNativeTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"seizePaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferPaused\",\"type\":\"bool\"}],\"internalType\":\"struct BaseMoonwellViews.ProtocolInfo\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributionEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"emissionPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.StakingInfo\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTokensBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Balances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Balances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBorrowsBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Balances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserClaimsVotingPower\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserMarketsMemberships\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"membership\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Memberships[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"supplyRewardsAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRewardsAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.Rewards[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserStakingInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"internalType\":\"struct BaseMoonwellViews.UserStakingInfo\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserStakingVotingPower\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserTokensVotingPower\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotingPower\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"claimsVotes\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"stakingVotes\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delegatedVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct BaseMoonwellViews.Votes\",\"name\":\"tokenVotes\",\"type\":\"tuple\"}],\"internalType\":\"struct BaseMoonwellViews.UserVotes\",\"name\":\"_result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenSaleDistributor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safetyModule\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nativeMarket\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceTokenLP\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Moonwell\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Moonwells Views Contract for V1 deployment (pre Basechain deployment)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAllMarketsInfo()\":{\"notice\":\"A view to enumerate all market configs\"},\"getGovernanceTokenPrice()\":{\"notice\":\"Function to get the governance token price\"},\"getMarketIncentives(address)\":{\"notice\":\"Virtual function to get market incentives, must be overrided overriden on the version of the deployment\"},\"getMarketInfo(address)\":{\"notice\":\"A view to get a specific market info\"},\"getMarketsInfo(address[])\":{\"notice\":\"A view to enumerate specfic markets configs\"},\"getNativeTokenPrice()\":{\"notice\":\"Function to get native token price\"},\"getProtocolInfo()\":{\"notice\":\"Function to get the protocol info\"},\"getStakingInfo()\":{\"notice\":\"A view to get all info from the staking module\"},\"getTokensBalances(address[],address)\":{\"notice\":\"Auxiliary function to get user token balances\"},\"getUserBalances(address)\":{\"notice\":\"View function to get the user balances from mTokens and the underlying tokens, including the native token and governance token\"},\"getUserBorrowsBalances(address)\":{\"notice\":\"View function to get the user borrowed balances from mTokens\"},\"getUserClaimsVotingPower(address)\":{\"notice\":\"A view to get the user voting power from the user vested tokens\"},\"getUserMarketsMemberships(address)\":{\"notice\":\"View function to get the markets where the user entered (to compute in the collateral factor)\"},\"getUserRewards(address)\":{\"notice\":\"Function to get the user accrued and pendings rewards\"},\"getUserStakingInfo(address)\":{\"notice\":\"Virtual function to get the user staking info\"},\"getUserStakingVotingPower(address)\":{\"notice\":\"A view to get the user voting power from the tokens staking in the safety module\"},\"getUserTokensVotingPower(address)\":{\"notice\":\"A view to get the user voting power from the user holdings\"},\"getUserVotingPower(address)\":{\"notice\":\"A view to get the user voting power from all the possible sources\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/views/MoonwellViewsV2.sol\":\"MoonwellViewsV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@proposals/=src/proposals/\",\":@protocol/=src/\",\":@test/=test/\",\":@utils/=utils/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src//Oracles/PriceOracle.sol\":{\"keccak256\":\"0x5c1d2b7f5d952114430caeab0bf30d8b1bd9041e5aa44fba78cb332174a68985\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://7f83906e893fa4ebd21aeb9e3a15a42c2ebbbaa265ecd4dca682f32e696daca4\",\"dweb:/ipfs/QmXgBTKD4eEmHRygbwG3bdCoSQYMfaf4Pd3YhdLkcyUpKf\"]},\"src/CarefulMath.sol\":{\"keccak256\":\"0x1afe9eb10fa6d712c35a773d779d731ce81a2f39dd1602c1689b8296d8aefe7a\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://9f3849eb7f30cd2a6d158088da7d15dfbfe41d4abb8c8299d9f945eec998c3b9\",\"dweb:/ipfs/Qmb75L3cXp46tM73kXvxpGp4i4QHeoDtKYSXo4NRsh53wx\"]},\"src/Comptroller.sol\":{\"keccak256\":\"0xa7dbb8d4998fd4fe9084db39da3e988ba53ab96c6118f763b678cb47672e89ed\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a83c283bf3cfbc366937e2efb7e10a602e315e25bea65ecdd09c789956bd19da\",\"dweb:/ipfs/QmYtvwqwiBuvwtWLFvmqeFvP2WC4RtMgwYUfqQ65FyvVK2\"]},\"src/ComptrollerInterface.sol\":{\"keccak256\":\"0x33849fb0a2f45c2eb21e7e76de5f782db4e34107b4089217db53b8673e3429b2\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://da6ef11728b5273d700d272b6e33229273eb42f8ab4153c47052d84ca43ee144\",\"dweb:/ipfs/QmQAe8ni7HfTJeAdurCHGXEmFTbhTuYuGv9wBrv2JU9VfZ\"]},\"src/ComptrollerStorage.sol\":{\"keccak256\":\"0xd16ed40ac2b40aeddff601e312ce7879efd65becae5a605167579f0e04193d8b\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://f6d981ab70de2670501e4df325bf94d075ff68226d2bf9ee19b573e194e8bc7e\",\"dweb:/ipfs/QmdKoHjoFNuHqDtw2wJqXjtSwgiMMWhBodXKBreRy1aHd8\"]},\"src/EIP20Interface.sol\":{\"keccak256\":\"0xb8819352e4b2733afad5bf9b1d81d2eacf7f41af59c77dbda47c69b4f9699abf\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://e20548deda3d3eb06a8bdfe7d8af389d297cffdd684760307cc0476fc6c64f5b\",\"dweb:/ipfs/QmbwN3MxcXaGZxC6gbsQ3EuBaAbfdnfBhoEDrrDTfqc3ZL\"]},\"src/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0xc57ef1e3f8ccfbed0559b52ece6779e35cade6ec3b567719c3916da3ae35fa55\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3e3ed00781b78e638093a76a8685c710d025a973555ff789f1b80104f259bfe4\",\"dweb:/ipfs/QmddYCsnZJTvPzvgrZj8HQ8BKoEX7iQKVWrPBUxqENUmfE\"]},\"src/ErrorReporter.sol\":{\"keccak256\":\"0x7501b8ac1c388994c8793104f56e82ef63f0b17f85f34a0c6a567075bc99e3cf\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://10eb800be5a16566ee7ed9afd15264e63ead04aef2f27658f295d67924c78c01\",\"dweb:/ipfs/QmS6W85LL7WJUazYmxuqHTBEQgRY51r214Rj2yhetVE7ig\"]},\"src/Exponential.sol\":{\"keccak256\":\"0xee4da58330737442729a711cff2a54d6586d15df6a3e187df5ab31076c725098\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://01a31d18209f0ada811d1b804c4c88a348bc1197a3f233cd0107604e832da7a8\",\"dweb:/ipfs/QmQKouAsUvGryvjAJLAdHVTymFym8PE4HomSyPKAf3bwJP\"]},\"src/ExponentialNoError.sol\":{\"keccak256\":\"0xcd2ec73378e278c59f432ca9bba03c53574ee7f9f262f136e0e12afa8ece64fa\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://46f90ac61d7ed65684ea56017bf21679ad5725eaf5e7b53e009cf6439d52b194\",\"dweb:/ipfs/QmZdyzC13fApRz9qXWPGTTQRw3eSknuc6sRSk6S3r5u6Ku\"]},\"src/Governance/IERC20.sol\":{\"keccak256\":\"0x0cc7daff45dae037a4e4d145ca880decb559c5c585c022e857097752874becfc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bf88d9a849b7a077a06384f151e2bd9bcb75130f67850e5ea1b350511670654f\",\"dweb:/ipfs/QmbeS8vyEwVAcMEkCFW4xr82Q9yJYwrBpjpbtcTFbD7k2G\"]},\"src/Governance/Well.sol\":{\"keccak256\":\"0xa07a1968fd64bb61e6082f53a1fa99869a514fd5a628fa4f3a57014d880adce6\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3d666c7d826525f71b76051b858f699271a5a6d47483bb2205999fa9e35a7ddb\",\"dweb:/ipfs/QmSEqkXPxRGETqFpdxd9ntvsFZXGTzotLNkVUp7nxrJ48m\"]},\"src/IRModels/InterestRateModel.sol\":{\"keccak256\":\"0x38ccd388a655db83e0637d4dcaa1fbb563d917bfe733d8ec0433f2e7a833cb66\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://4cc9edebb27fe2041a9f855be97cbbe657be678ffb2bb13804eb98fcc35fbf80\",\"dweb:/ipfs/QmVdnuS3kyNg5xv2RaY1SaiX1jfNdpQve9NbPyG5BbRfpt\"]},\"src/MToken.sol\":{\"keccak256\":\"0x6e1058749c1a9987d602895d08c4c37eb376244e8dd161564ff46f02564d49fd\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://cb7ccea19f38dce5654fe850d90e12f5e66a072f51c947684db87355256305b0\",\"dweb:/ipfs/Qmf6WfqnevvwYmEEkamRYnQCAedYXSpY3wsyJ3LUavCde2\"]},\"src/MTokenInterfaces.sol\":{\"keccak256\":\"0xb99c8270d89ce980d6e504e6835d77e61927ee51a762f7585ce467eda7ab479b\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://1b6edf68f5aef05505e112249c2df76ff2593a8b2bd657afc67d60ad58d0047d\",\"dweb:/ipfs/QmTFrewnnykcuVHR9XM1ZwSvmrzAYAvzwBDCzekF8WqFpm\"]},\"src/MultiRewardDistributor/IMultiRewardDistributor.sol\":{\"keccak256\":\"0x18cc808967e8e668774c18380a6da69b19fadec93486294e84fe02e86102dafa\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://aab44f0a028b3ea95fe3dd420517a0cd55bf0ce04ba04bface2df7769f63a3e0\",\"dweb:/ipfs/QmbJehbjitW3cT5eiHcBPijJQGGgXdZdALKXmf2TyQcv71\"]},\"src/MultiRewardDistributor/MultiRewardDistributor.sol\":{\"keccak256\":\"0x4e5a5102a342e78fcd0501e72dda5e153bb968fb7f00258b514b9709905fd854\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://3a47bfe55550b0e87f4c3c2af2b97ec92bca3a404f3365b9c8bc01e2a49af510\",\"dweb:/ipfs/QmZHJnj7GvgshxJ21QDx2J9bzUvgtNoNs7n6F9QGmzPJJC\"]},\"src/MultiRewardDistributor/MultiRewardDistributorCommon.sol\":{\"keccak256\":\"0xeeda12ed755d938fed50fc69c7748146dd3d435c3007920a13a79d3a8d0f14b7\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://965083334aeec404c638174a1fe33676888ffbe6ea6dd6069df25c6b7f87a515\",\"dweb:/ipfs/QmXu1vHYf2ponSBsyndG51upovJTsbQsHDJG1FVzLP6jxo\"]},\"src/Oracles/PriceOracle.sol\":{\"keccak256\":\"0x5c1d2b7f5d952114430caeab0bf30d8b1bd9041e5aa44fba78cb332174a68985\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://7f83906e893fa4ebd21aeb9e3a15a42c2ebbbaa265ecd4dca682f32e696daca4\",\"dweb:/ipfs/QmXgBTKD4eEmHRygbwG3bdCoSQYMfaf4Pd3YhdLkcyUpKf\"]},\"src/Unitroller.sol\":{\"keccak256\":\"0x61471cd301c73dc0da5a6226086d781915ed6b06a5274d22dddca4e17275387b\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://04c50c8bb7e169529cb368fd7f401abb7dbdfab13d060ea630e3f83fd388ef18\",\"dweb:/ipfs/QmezSMKcYgofR3etvw2s6KTc3nhimiKPEApDDS6om8Z31A\"]},\"src/views/BaseMoonwellViews.sol\":{\"keccak256\":\"0x1ba9d02e619940222c38453d5e1a03bd7cc70b1d233045511557d6047aaa9925\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a9dba4d7a1b5fe7f79be5d2427fb97b10fc2650e917901757512c3cc18419684\",\"dweb:/ipfs/QmQNYNgcwfEzmsd8vEodbKyrjnbosEFGXpSiwNpQKDShVJ\"]},\"src/views/MoonwellViewsV2.sol\":{\"keccak256\":\"0xefa3a5d617ccf61f95c8407b4c68780a84c9a75cc3a4d7ef8c49636b874067ea\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://9e1439d3c278cd9cd7590747e0d1b9bcebb6674fe69d6b95dfa445a031d3de90\",\"dweb:/ipfs/QmTurrR7EKTAZr1ijsXVdhPaeoN77bruPm87gdbL7L4ohL\"]},\"src/views/SafetyModuleInterfaceV1.sol\":{\"keccak256\":\"0x7dc03d6185bf229e56ec11a87d410eb7485771fd37652625e1a78d0faaf3396e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://8f0a87a0ebabfa1493e4314e0f16f3790ddc21a3c1e599a47619df9e1ba3db87\",\"dweb:/ipfs/QmWS5b4dBLvrY1PQGySqVeB2XsbgHdob8YTJ2wP1G376ry\"]},\"src/views/TokenSaleDistributorInterfaceV1.sol\":{\"keccak256\":\"0xaa923fd4e6042a4efb4abc01ba7ecc7e575a924e445ffd44a0dc2a8d51064db3\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://65f5d1a0fd26a0edd2d8b7a15a479cb82a4048230cf5bbe6124c96f24e86c68f\",\"dweb:/ipfs/QmY6Mu2s2J6BoyEHPEM7tf5rLaX2QaJDe8PPxCR9kHYJfS\"]},\"src/views/UniswapV2PairInterface.sol\":{\"keccak256\":\"0x14219f72d11281ebaee021dc18cb4483d929bfcf3b6e6b0240522d475085701f\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://7a69d9ca6a19d096b7f333a90ff0abc971832cdbf88a62348efad360ca3609c8\",\"dweb:/ipfs/QmeYRviBji2om5cM11y1VqBrxDmXVnv5VZveQmEfxbgLBR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "comptroller",
          "outputs": [
            {
              "internalType": "contract Comptroller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllMarketsInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Market[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isListed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyCap",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "mintPaused",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowPaused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrows",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangeRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
                  "name": "incentives",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyIncentivesPerSec",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowIncentivesPerSec",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGovernanceTokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract MToken",
              "name": "market",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketIncentives",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyIncentivesPerSec",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIncentivesPerSec",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract MToken",
              "name": "_mToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Market",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isListed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyCap",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "mintPaused",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowPaused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrows",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangeRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
                  "name": "incentives",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyIncentivesPerSec",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowIncentivesPerSec",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract MToken[]",
              "name": "_mTokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarketsInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Market[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isListed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyCap",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "mintPaused",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowPaused",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrows",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangeRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct BaseMoonwellViews.MarketIncentives[]",
                  "name": "incentives",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyIncentivesPerSec",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowIncentivesPerSec",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNativeTokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.ProtocolInfo",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "seizePaused",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferPaused",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.StakingInfo",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "cooldown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeWindow",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "distributionEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "emissionPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokensBalances",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Balances[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBalances",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Balances[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBorrowsBalances",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Balances[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserClaimsVotingPower",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserMarketsMemberships",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Memberships[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bool",
                  "name": "membership",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserRewards",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Rewards[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRewardsAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRewardsAmount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserStakingInfo",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.UserStakingInfo",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "cooldown",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pendingRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserStakingVotingPower",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserTokensVotingPower",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.Votes",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "delegatedVotingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "votingPower",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "delegates",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserVotingPower",
          "outputs": [
            {
              "internalType": "struct BaseMoonwellViews.UserVotes",
              "name": "_result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BaseMoonwellViews.Votes",
                  "name": "claimsVotes",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "delegatedVotingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "votingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "delegates",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct BaseMoonwellViews.Votes",
                  "name": "stakingVotes",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "delegatedVotingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "votingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "delegates",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct BaseMoonwellViews.Votes",
                  "name": "tokenVotes",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "delegatedVotingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "votingPower",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "delegates",
                      "type": "address"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_comptroller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenSaleDistributor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "safetyModule",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governanceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nativeMarket",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "governanceTokenLP",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getAllMarketsInfo()": {
            "notice": "A view to enumerate all market configs"
          },
          "getGovernanceTokenPrice()": {
            "notice": "Function to get the governance token price"
          },
          "getMarketIncentives(address)": {
            "notice": "Virtual function to get market incentives, must be overrided overriden on the version of the deployment"
          },
          "getMarketInfo(address)": {
            "notice": "A view to get a specific market info"
          },
          "getMarketsInfo(address[])": {
            "notice": "A view to enumerate specfic markets configs"
          },
          "getNativeTokenPrice()": {
            "notice": "Function to get native token price"
          },
          "getProtocolInfo()": {
            "notice": "Function to get the protocol info"
          },
          "getStakingInfo()": {
            "notice": "A view to get all info from the staking module"
          },
          "getTokensBalances(address[],address)": {
            "notice": "Auxiliary function to get user token balances"
          },
          "getUserBalances(address)": {
            "notice": "View function to get the user balances from mTokens and the underlying tokens, including the native token and governance token"
          },
          "getUserBorrowsBalances(address)": {
            "notice": "View function to get the user borrowed balances from mTokens"
          },
          "getUserClaimsVotingPower(address)": {
            "notice": "A view to get the user voting power from the user vested tokens"
          },
          "getUserMarketsMemberships(address)": {
            "notice": "View function to get the markets where the user entered (to compute in the collateral factor)"
          },
          "getUserRewards(address)": {
            "notice": "Function to get the user accrued and pendings rewards"
          },
          "getUserStakingInfo(address)": {
            "notice": "Virtual function to get the user staking info"
          },
          "getUserStakingVotingPower(address)": {
            "notice": "A view to get the user voting power from the tokens staking in the safety module"
          },
          "getUserTokensVotingPower(address)": {
            "notice": "A view to get the user voting power from the user holdings"
          },
          "getUserVotingPower(address)": {
            "notice": "A view to get the user voting power from all the possible sources"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@proposals/=src/proposals/",
        "@protocol/=src/",
        "@test/=test/",
        "@utils/=utils/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/views/MoonwellViewsV2.sol": "MoonwellViewsV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src//Oracles/PriceOracle.sol": {
        "keccak256": "0x5c1d2b7f5d952114430caeab0bf30d8b1bd9041e5aa44fba78cb332174a68985",
        "urls": [
          "bzz-raw://7f83906e893fa4ebd21aeb9e3a15a42c2ebbbaa265ecd4dca682f32e696daca4",
          "dweb:/ipfs/QmXgBTKD4eEmHRygbwG3bdCoSQYMfaf4Pd3YhdLkcyUpKf"
        ],
        "license": "BSD-3-Clause"
      },
      "src/CarefulMath.sol": {
        "keccak256": "0x1afe9eb10fa6d712c35a773d779d731ce81a2f39dd1602c1689b8296d8aefe7a",
        "urls": [
          "bzz-raw://9f3849eb7f30cd2a6d158088da7d15dfbfe41d4abb8c8299d9f945eec998c3b9",
          "dweb:/ipfs/Qmb75L3cXp46tM73kXvxpGp4i4QHeoDtKYSXo4NRsh53wx"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Comptroller.sol": {
        "keccak256": "0xa7dbb8d4998fd4fe9084db39da3e988ba53ab96c6118f763b678cb47672e89ed",
        "urls": [
          "bzz-raw://a83c283bf3cfbc366937e2efb7e10a602e315e25bea65ecdd09c789956bd19da",
          "dweb:/ipfs/QmYtvwqwiBuvwtWLFvmqeFvP2WC4RtMgwYUfqQ65FyvVK2"
        ],
        "license": "BSD-3-Clause"
      },
      "src/ComptrollerInterface.sol": {
        "keccak256": "0x33849fb0a2f45c2eb21e7e76de5f782db4e34107b4089217db53b8673e3429b2",
        "urls": [
          "bzz-raw://da6ef11728b5273d700d272b6e33229273eb42f8ab4153c47052d84ca43ee144",
          "dweb:/ipfs/QmQAe8ni7HfTJeAdurCHGXEmFTbhTuYuGv9wBrv2JU9VfZ"
        ],
        "license": "BSD-3-Clause"
      },
      "src/ComptrollerStorage.sol": {
        "keccak256": "0xd16ed40ac2b40aeddff601e312ce7879efd65becae5a605167579f0e04193d8b",
        "urls": [
          "bzz-raw://f6d981ab70de2670501e4df325bf94d075ff68226d2bf9ee19b573e194e8bc7e",
          "dweb:/ipfs/QmdKoHjoFNuHqDtw2wJqXjtSwgiMMWhBodXKBreRy1aHd8"
        ],
        "license": "BSD-3-Clause"
      },
      "src/EIP20Interface.sol": {
        "keccak256": "0xb8819352e4b2733afad5bf9b1d81d2eacf7f41af59c77dbda47c69b4f9699abf",
        "urls": [
          "bzz-raw://e20548deda3d3eb06a8bdfe7d8af389d297cffdd684760307cc0476fc6c64f5b",
          "dweb:/ipfs/QmbwN3MxcXaGZxC6gbsQ3EuBaAbfdnfBhoEDrrDTfqc3ZL"
        ],
        "license": "BSD-3-Clause"
      },
      "src/EIP20NonStandardInterface.sol": {
        "keccak256": "0xc57ef1e3f8ccfbed0559b52ece6779e35cade6ec3b567719c3916da3ae35fa55",
        "urls": [
          "bzz-raw://3e3ed00781b78e638093a76a8685c710d025a973555ff789f1b80104f259bfe4",
          "dweb:/ipfs/QmddYCsnZJTvPzvgrZj8HQ8BKoEX7iQKVWrPBUxqENUmfE"
        ],
        "license": "BSD-3-Clause"
      },
      "src/ErrorReporter.sol": {
        "keccak256": "0x7501b8ac1c388994c8793104f56e82ef63f0b17f85f34a0c6a567075bc99e3cf",
        "urls": [
          "bzz-raw://10eb800be5a16566ee7ed9afd15264e63ead04aef2f27658f295d67924c78c01",
          "dweb:/ipfs/QmS6W85LL7WJUazYmxuqHTBEQgRY51r214Rj2yhetVE7ig"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Exponential.sol": {
        "keccak256": "0xee4da58330737442729a711cff2a54d6586d15df6a3e187df5ab31076c725098",
        "urls": [
          "bzz-raw://01a31d18209f0ada811d1b804c4c88a348bc1197a3f233cd0107604e832da7a8",
          "dweb:/ipfs/QmQKouAsUvGryvjAJLAdHVTymFym8PE4HomSyPKAf3bwJP"
        ],
        "license": "BSD-3-Clause"
      },
      "src/ExponentialNoError.sol": {
        "keccak256": "0xcd2ec73378e278c59f432ca9bba03c53574ee7f9f262f136e0e12afa8ece64fa",
        "urls": [
          "bzz-raw://46f90ac61d7ed65684ea56017bf21679ad5725eaf5e7b53e009cf6439d52b194",
          "dweb:/ipfs/QmZdyzC13fApRz9qXWPGTTQRw3eSknuc6sRSk6S3r5u6Ku"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Governance/IERC20.sol": {
        "keccak256": "0x0cc7daff45dae037a4e4d145ca880decb559c5c585c022e857097752874becfc",
        "urls": [
          "bzz-raw://bf88d9a849b7a077a06384f151e2bd9bcb75130f67850e5ea1b350511670654f",
          "dweb:/ipfs/QmbeS8vyEwVAcMEkCFW4xr82Q9yJYwrBpjpbtcTFbD7k2G"
        ],
        "license": "agpl-3.0"
      },
      "src/Governance/Well.sol": {
        "keccak256": "0xa07a1968fd64bb61e6082f53a1fa99869a514fd5a628fa4f3a57014d880adce6",
        "urls": [
          "bzz-raw://3d666c7d826525f71b76051b858f699271a5a6d47483bb2205999fa9e35a7ddb",
          "dweb:/ipfs/QmSEqkXPxRGETqFpdxd9ntvsFZXGTzotLNkVUp7nxrJ48m"
        ],
        "license": "BSD-3-Clause"
      },
      "src/IRModels/InterestRateModel.sol": {
        "keccak256": "0x38ccd388a655db83e0637d4dcaa1fbb563d917bfe733d8ec0433f2e7a833cb66",
        "urls": [
          "bzz-raw://4cc9edebb27fe2041a9f855be97cbbe657be678ffb2bb13804eb98fcc35fbf80",
          "dweb:/ipfs/QmVdnuS3kyNg5xv2RaY1SaiX1jfNdpQve9NbPyG5BbRfpt"
        ],
        "license": "BSD-3-Clause"
      },
      "src/MToken.sol": {
        "keccak256": "0x6e1058749c1a9987d602895d08c4c37eb376244e8dd161564ff46f02564d49fd",
        "urls": [
          "bzz-raw://cb7ccea19f38dce5654fe850d90e12f5e66a072f51c947684db87355256305b0",
          "dweb:/ipfs/Qmf6WfqnevvwYmEEkamRYnQCAedYXSpY3wsyJ3LUavCde2"
        ],
        "license": "BSD-3-Clause"
      },
      "src/MTokenInterfaces.sol": {
        "keccak256": "0xb99c8270d89ce980d6e504e6835d77e61927ee51a762f7585ce467eda7ab479b",
        "urls": [
          "bzz-raw://1b6edf68f5aef05505e112249c2df76ff2593a8b2bd657afc67d60ad58d0047d",
          "dweb:/ipfs/QmTFrewnnykcuVHR9XM1ZwSvmrzAYAvzwBDCzekF8WqFpm"
        ],
        "license": "BSD-3-Clause"
      },
      "src/MultiRewardDistributor/IMultiRewardDistributor.sol": {
        "keccak256": "0x18cc808967e8e668774c18380a6da69b19fadec93486294e84fe02e86102dafa",
        "urls": [
          "bzz-raw://aab44f0a028b3ea95fe3dd420517a0cd55bf0ce04ba04bface2df7769f63a3e0",
          "dweb:/ipfs/QmbJehbjitW3cT5eiHcBPijJQGGgXdZdALKXmf2TyQcv71"
        ],
        "license": "BSD-3-Clause"
      },
      "src/MultiRewardDistributor/MultiRewardDistributor.sol": {
        "keccak256": "0x4e5a5102a342e78fcd0501e72dda5e153bb968fb7f00258b514b9709905fd854",
        "urls": [
          "bzz-raw://3a47bfe55550b0e87f4c3c2af2b97ec92bca3a404f3365b9c8bc01e2a49af510",
          "dweb:/ipfs/QmZHJnj7GvgshxJ21QDx2J9bzUvgtNoNs7n6F9QGmzPJJC"
        ],
        "license": "BSD-3-Clause"
      },
      "src/MultiRewardDistributor/MultiRewardDistributorCommon.sol": {
        "keccak256": "0xeeda12ed755d938fed50fc69c7748146dd3d435c3007920a13a79d3a8d0f14b7",
        "urls": [
          "bzz-raw://965083334aeec404c638174a1fe33676888ffbe6ea6dd6069df25c6b7f87a515",
          "dweb:/ipfs/QmXu1vHYf2ponSBsyndG51upovJTsbQsHDJG1FVzLP6jxo"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Oracles/PriceOracle.sol": {
        "keccak256": "0x5c1d2b7f5d952114430caeab0bf30d8b1bd9041e5aa44fba78cb332174a68985",
        "urls": [
          "bzz-raw://7f83906e893fa4ebd21aeb9e3a15a42c2ebbbaa265ecd4dca682f32e696daca4",
          "dweb:/ipfs/QmXgBTKD4eEmHRygbwG3bdCoSQYMfaf4Pd3YhdLkcyUpKf"
        ],
        "license": "BSD-3-Clause"
      },
      "src/Unitroller.sol": {
        "keccak256": "0x61471cd301c73dc0da5a6226086d781915ed6b06a5274d22dddca4e17275387b",
        "urls": [
          "bzz-raw://04c50c8bb7e169529cb368fd7f401abb7dbdfab13d060ea630e3f83fd388ef18",
          "dweb:/ipfs/QmezSMKcYgofR3etvw2s6KTc3nhimiKPEApDDS6om8Z31A"
        ],
        "license": "BSD-3-Clause"
      },
      "src/views/BaseMoonwellViews.sol": {
        "keccak256": "0x1ba9d02e619940222c38453d5e1a03bd7cc70b1d233045511557d6047aaa9925",
        "urls": [
          "bzz-raw://a9dba4d7a1b5fe7f79be5d2427fb97b10fc2650e917901757512c3cc18419684",
          "dweb:/ipfs/QmQNYNgcwfEzmsd8vEodbKyrjnbosEFGXpSiwNpQKDShVJ"
        ],
        "license": "BSD-3-Clause"
      },
      "src/views/MoonwellViewsV2.sol": {
        "keccak256": "0xefa3a5d617ccf61f95c8407b4c68780a84c9a75cc3a4d7ef8c49636b874067ea",
        "urls": [
          "bzz-raw://9e1439d3c278cd9cd7590747e0d1b9bcebb6674fe69d6b95dfa445a031d3de90",
          "dweb:/ipfs/QmTurrR7EKTAZr1ijsXVdhPaeoN77bruPm87gdbL7L4ohL"
        ],
        "license": "BSD-3-Clause"
      },
      "src/views/SafetyModuleInterfaceV1.sol": {
        "keccak256": "0x7dc03d6185bf229e56ec11a87d410eb7485771fd37652625e1a78d0faaf3396e",
        "urls": [
          "bzz-raw://8f0a87a0ebabfa1493e4314e0f16f3790ddc21a3c1e599a47619df9e1ba3db87",
          "dweb:/ipfs/QmWS5b4dBLvrY1PQGySqVeB2XsbgHdob8YTJ2wP1G376ry"
        ],
        "license": "BSD-3-Clause"
      },
      "src/views/TokenSaleDistributorInterfaceV1.sol": {
        "keccak256": "0xaa923fd4e6042a4efb4abc01ba7ecc7e575a924e445ffd44a0dc2a8d51064db3",
        "urls": [
          "bzz-raw://65f5d1a0fd26a0edd2d8b7a15a479cb82a4048230cf5bbe6124c96f24e86c68f",
          "dweb:/ipfs/QmY6Mu2s2J6BoyEHPEM7tf5rLaX2QaJDe8PPxCR9kHYJfS"
        ],
        "license": "BSD-3-Clause"
      },
      "src/views/UniswapV2PairInterface.sol": {
        "keccak256": "0x14219f72d11281ebaee021dc18cb4483d929bfcf3b6e6b0240522d475085701f",
        "urls": [
          "bzz-raw://7a69d9ca6a19d096b7f333a90ff0abc971832cdbf88a62348efad360ca3609c8",
          "dweb:/ipfs/QmeYRviBji2om5cM11y1VqBrxDmXVnv5VZveQmEfxbgLBR"
        ],
        "license": "BSD-3-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/views/MoonwellViewsV2.sol",
    "id": 80858,
    "exportedSymbols": {
      "BaseMoonwellViews": [
        80513
      ],
      "Comptroller": [
        53700
      ],
      "IMultiRewardDistributor": [
        67408
      ],
      "MToken": [
        66680
      ],
      "MoonwellViewsV2": [
        80857
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:4086:104",
    "nodes": [
      {
        "id": 80515,
        "nodeType": "PragmaDirective",
        "src": "41:23:104",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 80517,
        "nodeType": "ImportDirective",
        "src": "66:72:104",
        "nodes": [],
        "absolutePath": "src/views/BaseMoonwellViews.sol",
        "file": "@protocol/views/BaseMoonwellViews.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80858,
        "sourceUnit": 80514,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80516,
              "name": "BaseMoonwellViews",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80513,
              "src": "74:17:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80519,
        "nodeType": "ImportDirective",
        "src": "139:54:104",
        "nodes": [],
        "absolutePath": "src/Comptroller.sol",
        "file": "@protocol/Comptroller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80858,
        "sourceUnit": 53701,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80518,
              "name": "Comptroller",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53700,
              "src": "147:11:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80521,
        "nodeType": "ImportDirective",
        "src": "194:101:104",
        "nodes": [],
        "absolutePath": "src/MultiRewardDistributor/IMultiRewardDistributor.sol",
        "file": "@protocol/MultiRewardDistributor/IMultiRewardDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80858,
        "sourceUnit": 67409,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80520,
              "name": "IMultiRewardDistributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67408,
              "src": "202:23:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80523,
        "nodeType": "ImportDirective",
        "src": "296:44:104",
        "nodes": [],
        "absolutePath": "src/MToken.sol",
        "file": "@protocol/MToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80858,
        "sourceUnit": 66681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80522,
              "name": "MToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66680,
              "src": "304:6:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80857,
        "nodeType": "ContractDefinition",
        "src": "450:3676:104",
        "nodes": [
          {
            "id": 80540,
            "nodeType": "FunctionDefinition",
            "src": "502:148:104",
            "nodes": [],
            "body": {
              "id": 80539,
              "nodeType": "Block",
              "src": "595:55:104",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80536,
                        "name": "_market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80528,
                        "src": "635:7:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80534,
                        "name": "comptroller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79216,
                        "src": "612:11:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Comptroller_$53700",
                          "typeString": "contract Comptroller"
                        }
                      },
                      "id": 80535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "624:10:104",
                      "memberName": "supplyCaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54013,
                      "src": "612:22:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 80537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:31:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80533,
                  "id": 80538,
                  "nodeType": "Return",
                  "src": "605:38:104"
                }
              ]
            },
            "baseFunctions": [
              79328
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSupplyCaps",
            "nameLocation": "511:14:104",
            "overrides": {
              "id": 80530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "571:8:104"
            },
            "parameters": {
              "id": 80529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80528,
                  "mutability": "mutable",
                  "name": "_market",
                  "nameLocation": "543:7:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 80540,
                  "src": "535:15:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:31:104"
            },
            "returnParameters": {
              "id": 80533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80540,
                  "src": "589:4:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:4:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:6:104"
            },
            "scope": 80857,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 80674,
            "nodeType": "FunctionDefinition",
            "src": "656:1372:104",
            "nodes": [],
            "body": {
              "id": 80673,
              "nodeType": "Block",
              "src": "771:1257:104",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80553,
                      "mutability": "mutable",
                      "name": "distributor",
                      "nameLocation": "805:11:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80673,
                      "src": "781:35:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                        "typeString": "contract IMultiRewardDistributor"
                      },
                      "typeName": {
                        "id": 80552,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80551,
                          "name": "IMultiRewardDistributor",
                          "nameLocations": [
                            "781:23:104"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67408,
                          "src": "781:23:104"
                        },
                        "referencedDeclaration": 67408,
                        "src": "781:23:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                          "typeString": "contract IMultiRewardDistributor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80562,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 80557,
                                "name": "comptroller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79216,
                                "src": "864:11:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Comptroller_$53700",
                                  "typeString": "contract Comptroller"
                                }
                              },
                              "id": 80558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "876:17:104",
                              "memberName": "rewardDistributor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54017,
                              "src": "864:29:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_MultiRewardDistributor_$69539_$",
                                "typeString": "function () view external returns (contract MultiRewardDistributor)"
                              }
                            },
                            "id": 80559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "864:31:104",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MultiRewardDistributor_$69539",
                              "typeString": "contract MultiRewardDistributor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MultiRewardDistributor_$69539",
                              "typeString": "contract MultiRewardDistributor"
                            }
                          ],
                          "id": 80556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "856:7:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80555,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "856:7:104",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "856:40:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80554,
                      "name": "IMultiRewardDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67408,
                      "src": "819:23:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMultiRewardDistributor_$67408_$",
                        "typeString": "type(contract IMultiRewardDistributor)"
                      }
                    },
                    "id": 80561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:87:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                      "typeString": "contract IMultiRewardDistributor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "781:125:104"
                },
                {
                  "assignments": [
                    80568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80568,
                      "mutability": "mutable",
                      "name": "_emissionConfigs",
                      "nameLocation": "975:16:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80673,
                      "src": "917:74:104",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MultiRewardDistributorCommon.MarketConfig[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80566,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80565,
                            "name": "IMultiRewardDistributor.MarketConfig",
                            "nameLocations": [
                              "917:23:104",
                              "941:12:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 69561,
                            "src": "917:36:104"
                          },
                          "referencedDeclaration": 69561,
                          "src": "917:36:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketConfig_$69561_storage_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.MarketConfig"
                          }
                        },
                        "id": 80567,
                        "nodeType": "ArrayTypeName",
                        "src": "917:38:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_storage_$dyn_storage_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80573,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80571,
                        "name": "market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80543,
                        "src": "1026:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MToken_$66680",
                          "typeString": "contract MToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MToken_$66680",
                          "typeString": "contract MToken"
                        }
                      ],
                      "expression": {
                        "id": 80569,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80553,
                        "src": "994:11:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                          "typeString": "contract IMultiRewardDistributor"
                        }
                      },
                      "id": 80570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1006:19:104",
                      "memberName": "getAllMarketConfigs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67239,
                      "src": "994:31:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_MToken_$66680_$returns$_t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (contract MToken) view external returns (struct MultiRewardDistributorCommon.MarketConfig memory[] memory)"
                      }
                    },
                    "id": 80572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:39:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:116:104"
                },
                {
                  "assignments": [
                    80575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80575,
                      "mutability": "mutable",
                      "name": "_indexHelper",
                      "nameLocation": "1049:12:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80673,
                      "src": "1044:17:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80574,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1044:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80577,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 80576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1064:1:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1044:21:104"
                },
                {
                  "body": {
                    "id": 80608,
                    "nodeType": "Block",
                    "src": "1138:217:104",
                    "statements": [
                      {
                        "assignments": [
                          80593
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80593,
                            "mutability": "mutable",
                            "name": "_config",
                            "nameLocation": "1212:7:104",
                            "nodeType": "VariableDeclaration",
                            "scope": 80608,
                            "src": "1152:67:104",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.MarketConfig"
                            },
                            "typeName": {
                              "id": 80592,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80591,
                                "name": "IMultiRewardDistributor.MarketConfig",
                                "nameLocations": [
                                  "1152:23:104",
                                  "1176:12:104"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 69561,
                                "src": "1152:36:104"
                              },
                              "referencedDeclaration": 69561,
                              "src": "1152:36:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MarketConfig_$69561_storage_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.MarketConfig"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80597,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80594,
                            "name": "_emissionConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80568,
                            "src": "1222:16:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory[] memory"
                            }
                          },
                          "id": 80596,
                          "indexExpression": {
                            "id": 80595,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80579,
                            "src": "1239:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1222:23:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1152:93:104"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 80598,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80593,
                              "src": "1263:7:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                              }
                            },
                            "id": 80599,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1271:7:104",
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69548,
                            "src": "1263:15:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 80600,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1281:5:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 80601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1287:9:104",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1281:15:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1263:33:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80607,
                        "nodeType": "IfStatement",
                        "src": "1259:86:104",
                        "trueBody": {
                          "id": 80606,
                          "nodeType": "Block",
                          "src": "1298:47:104",
                          "statements": [
                            {
                              "expression": {
                                "id": 80604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1316:14:104",
                                "subExpression": {
                                  "id": 80603,
                                  "name": "_indexHelper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80575,
                                  "src": "1316:12:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 80605,
                              "nodeType": "ExpressionStatement",
                              "src": "1316:14:104"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80582,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80579,
                      "src": "1096:5:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80583,
                        "name": "_emissionConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80568,
                        "src": "1104:16:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory[] memory"
                        }
                      },
                      "id": 80584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1121:6:104",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1104:23:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1096:31:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80609,
                  "initializationExpression": {
                    "assignments": [
                      80579
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80579,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "1085:5:104",
                        "nodeType": "VariableDeclaration",
                        "scope": 80609,
                        "src": "1080:10:104",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80578,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1080:4:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80581,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1093:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1080:14:104"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1129:7:104",
                      "subExpression": {
                        "id": 80586,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80579,
                        "src": "1129:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80588,
                    "nodeType": "ExpressionStatement",
                    "src": "1129:7:104"
                  },
                  "nodeType": "ForStatement",
                  "src": "1075:280:104"
                },
                {
                  "assignments": [
                    80614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80614,
                      "mutability": "mutable",
                      "name": "_result",
                      "nameLocation": "1391:7:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80673,
                      "src": "1365:33:104",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct BaseMoonwellViews.MarketIncentives[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80612,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80611,
                            "name": "MarketIncentives",
                            "nameLocations": [
                              "1365:16:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79126,
                            "src": "1365:16:104"
                          },
                          "referencedDeclaration": 79126,
                          "src": "1365:16:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketIncentives_$79126_storage_ptr",
                            "typeString": "struct BaseMoonwellViews.MarketIncentives"
                          }
                        },
                        "id": 80613,
                        "nodeType": "ArrayTypeName",
                        "src": "1365:18:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_storage_$dyn_storage_ptr",
                          "typeString": "struct BaseMoonwellViews.MarketIncentives[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80619,
                        "name": "_indexHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80575,
                        "src": "1437:12:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1401:22:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct BaseMoonwellViews.MarketIncentives memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80616,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80615,
                            "name": "MarketIncentives",
                            "nameLocations": [
                              "1405:16:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79126,
                            "src": "1405:16:104"
                          },
                          "referencedDeclaration": 79126,
                          "src": "1405:16:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketIncentives_$79126_storage_ptr",
                            "typeString": "struct BaseMoonwellViews.MarketIncentives"
                          }
                        },
                        "id": 80617,
                        "nodeType": "ArrayTypeName",
                        "src": "1405:18:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_storage_$dyn_storage_ptr",
                          "typeString": "struct BaseMoonwellViews.MarketIncentives[]"
                        }
                      }
                    },
                    "id": 80620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1401:58:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct BaseMoonwellViews.MarketIncentives memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1365:94:104"
                },
                {
                  "expression": {
                    "id": 80624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80622,
                      "name": "_indexHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80575,
                      "src": "1470:12:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 80623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1485:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1470:16:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80625,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:16:104"
                },
                {
                  "body": {
                    "id": 80669,
                    "nodeType": "Block",
                    "src": "1559:438:104",
                    "statements": [
                      {
                        "assignments": [
                          80641
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80641,
                            "mutability": "mutable",
                            "name": "_config",
                            "nameLocation": "1633:7:104",
                            "nodeType": "VariableDeclaration",
                            "scope": 80669,
                            "src": "1573:67:104",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.MarketConfig"
                            },
                            "typeName": {
                              "id": 80640,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80639,
                                "name": "IMultiRewardDistributor.MarketConfig",
                                "nameLocations": [
                                  "1573:23:104",
                                  "1597:12:104"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 69561,
                                "src": "1573:36:104"
                              },
                              "referencedDeclaration": 69561,
                              "src": "1573:36:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MarketConfig_$69561_storage_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.MarketConfig"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80645,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80642,
                            "name": "_emissionConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80568,
                            "src": "1643:16:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory[] memory"
                            }
                          },
                          "id": 80644,
                          "indexExpression": {
                            "id": 80643,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80627,
                            "src": "1660:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1643:23:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1573:93:104"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 80646,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80641,
                              "src": "1684:7:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                              }
                            },
                            "id": 80647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1692:7:104",
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69548,
                            "src": "1684:15:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 80648,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1702:5:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 80649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1708:9:104",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1702:15:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1684:33:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80668,
                        "nodeType": "IfStatement",
                        "src": "1680:307:104",
                        "trueBody": {
                          "id": 80667,
                          "nodeType": "Block",
                          "src": "1719:268:104",
                          "statements": [
                            {
                              "expression": {
                                "id": 80662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 80651,
                                    "name": "_result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80614,
                                    "src": "1737:7:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct BaseMoonwellViews.MarketIncentives memory[] memory"
                                    }
                                  },
                                  "id": 80653,
                                  "indexExpression": {
                                    "id": 80652,
                                    "name": "_indexHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80575,
                                    "src": "1745:12:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1737:21:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketIncentives_$79126_memory_ptr",
                                    "typeString": "struct BaseMoonwellViews.MarketIncentives memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 80655,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80641,
                                        "src": "1799:7:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                                        }
                                      },
                                      "id": 80656,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1807:13:104",
                                      "memberName": "emissionToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 69546,
                                      "src": "1799:21:104",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 80657,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80641,
                                        "src": "1842:7:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                                        }
                                      },
                                      "id": 80658,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1850:21:104",
                                      "memberName": "supplyEmissionsPerSec",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 69558,
                                      "src": "1842:29:104",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 80659,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80641,
                                        "src": "1893:7:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_MarketConfig_$69561_memory_ptr",
                                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory"
                                        }
                                      },
                                      "id": 80660,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1901:21:104",
                                      "memberName": "borrowEmissionsPerSec",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 69560,
                                      "src": "1893:29:104",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 80654,
                                    "name": "MarketIncentives",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79126,
                                    "src": "1761:16:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_MarketIncentives_$79126_storage_ptr_$",
                                      "typeString": "type(struct BaseMoonwellViews.MarketIncentives storage pointer)"
                                    }
                                  },
                                  "id": 80661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1761:179:104",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MarketIncentives_$79126_memory_ptr",
                                    "typeString": "struct BaseMoonwellViews.MarketIncentives memory"
                                  }
                                },
                                "src": "1737:203:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MarketIncentives_$79126_memory_ptr",
                                  "typeString": "struct BaseMoonwellViews.MarketIncentives memory"
                                }
                              },
                              "id": 80663,
                              "nodeType": "ExpressionStatement",
                              "src": "1737:203:104"
                            },
                            {
                              "expression": {
                                "id": 80665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1958:14:104",
                                "subExpression": {
                                  "id": 80664,
                                  "name": "_indexHelper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80575,
                                  "src": "1958:12:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 80666,
                              "nodeType": "ExpressionStatement",
                              "src": "1958:14:104"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80630,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80627,
                      "src": "1517:5:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80631,
                        "name": "_emissionConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80568,
                        "src": "1525:16:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_MarketConfig_$69561_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.MarketConfig memory[] memory"
                        }
                      },
                      "id": 80632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1542:6:104",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1525:23:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1517:31:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80670,
                  "initializationExpression": {
                    "assignments": [
                      80627
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80627,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "1506:5:104",
                        "nodeType": "VariableDeclaration",
                        "scope": 80670,
                        "src": "1501:10:104",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80626,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1501:4:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80629,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1514:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1501:14:104"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1550:7:104",
                      "subExpression": {
                        "id": 80634,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80627,
                        "src": "1550:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80636,
                    "nodeType": "ExpressionStatement",
                    "src": "1550:7:104"
                  },
                  "nodeType": "ForStatement",
                  "src": "1496:501:104"
                },
                {
                  "expression": {
                    "id": 80671,
                    "name": "_result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80614,
                    "src": "2014:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct BaseMoonwellViews.MarketIncentives memory[] memory"
                    }
                  },
                  "functionReturnParameters": 80550,
                  "id": 80672,
                  "nodeType": "Return",
                  "src": "2007:14:104"
                }
              ]
            },
            "baseFunctions": [
              79727
            ],
            "functionSelector": "e22340c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMarketIncentives",
            "nameLocation": "665:19:104",
            "overrides": {
              "id": 80545,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "726:8:104"
            },
            "parameters": {
              "id": 80544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80543,
                  "mutability": "mutable",
                  "name": "market",
                  "nameLocation": "701:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 80674,
                  "src": "694:13:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MToken_$66680",
                    "typeString": "contract MToken"
                  },
                  "typeName": {
                    "id": 80542,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80541,
                      "name": "MToken",
                      "nameLocations": [
                        "694:6:104"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66680,
                      "src": "694:6:104"
                    },
                    "referencedDeclaration": 66680,
                    "src": "694:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MToken_$66680",
                      "typeString": "contract MToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "684:29:104"
            },
            "returnParameters": {
              "id": 80550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80674,
                  "src": "744:25:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BaseMoonwellViews.MarketIncentives[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80547,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 80546,
                        "name": "MarketIncentives",
                        "nameLocations": [
                          "744:16:104"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 79126,
                        "src": "744:16:104"
                      },
                      "referencedDeclaration": 79126,
                      "src": "744:16:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketIncentives_$79126_storage_ptr",
                        "typeString": "struct BaseMoonwellViews.MarketIncentives"
                      }
                    },
                    "id": 80548,
                    "nodeType": "ArrayTypeName",
                    "src": "744:18:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MarketIncentives_$79126_storage_$dyn_storage_ptr",
                      "typeString": "struct BaseMoonwellViews.MarketIncentives[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:27:104"
            },
            "scope": 80857,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80856,
            "nodeType": "FunctionDefinition",
            "src": "2104:2020:104",
            "nodes": [],
            "body": {
              "id": 80855,
              "nodeType": "Block",
              "src": "2205:1919:104",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80687,
                      "mutability": "mutable",
                      "name": "distributor",
                      "nameLocation": "2239:11:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80855,
                      "src": "2215:35:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                        "typeString": "contract IMultiRewardDistributor"
                      },
                      "typeName": {
                        "id": 80686,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80685,
                          "name": "IMultiRewardDistributor",
                          "nameLocations": [
                            "2215:23:104"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67408,
                          "src": "2215:23:104"
                        },
                        "referencedDeclaration": 67408,
                        "src": "2215:23:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                          "typeString": "contract IMultiRewardDistributor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80696,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 80691,
                                "name": "comptroller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79216,
                                "src": "2298:11:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Comptroller_$53700",
                                  "typeString": "contract Comptroller"
                                }
                              },
                              "id": 80692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2310:17:104",
                              "memberName": "rewardDistributor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54017,
                              "src": "2298:29:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_MultiRewardDistributor_$69539_$",
                                "typeString": "function () view external returns (contract MultiRewardDistributor)"
                              }
                            },
                            "id": 80693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2298:31:104",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MultiRewardDistributor_$69539",
                              "typeString": "contract MultiRewardDistributor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MultiRewardDistributor_$69539",
                              "typeString": "contract MultiRewardDistributor"
                            }
                          ],
                          "id": 80690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2290:7:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2290:7:104",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2290:40:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 80688,
                      "name": "IMultiRewardDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67408,
                      "src": "2253:23:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IMultiRewardDistributor_$67408_$",
                        "typeString": "type(contract IMultiRewardDistributor)"
                      }
                    },
                    "id": 80695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:87:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                      "typeString": "contract IMultiRewardDistributor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2215:125:104"
                },
                {
                  "assignments": [
                    80702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80702,
                      "mutability": "mutable",
                      "name": "outstandingRewards",
                      "nameLocation": "2413:18:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80855,
                      "src": "2351:80:104",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80700,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80699,
                            "name": "IMultiRewardDistributor.RewardWithMToken",
                            "nameLocations": [
                              "2351:23:104",
                              "2375:16:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 69607,
                            "src": "2351:40:104"
                          },
                          "referencedDeclaration": 69607,
                          "src": "2351:40:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardWithMToken_$69607_storage_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken"
                          }
                        },
                        "id": 80701,
                        "nodeType": "ArrayTypeName",
                        "src": "2351:42:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_storage_$dyn_storage_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80707,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80705,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80677,
                        "src": "2492:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80703,
                        "name": "distributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80687,
                        "src": "2434:11:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMultiRewardDistributor_$67408",
                          "typeString": "contract IMultiRewardDistributor"
                        }
                      },
                      "id": 80704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2463:28:104",
                      "memberName": "getOutstandingRewardsForUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67259,
                      "src": "2434:57:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory)"
                      }
                    },
                    "id": 80706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:64:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2351:147:104"
                },
                {
                  "assignments": [
                    80709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80709,
                      "mutability": "mutable",
                      "name": "_indexHelper",
                      "nameLocation": "2514:12:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80855,
                      "src": "2509:17:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80708,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2509:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80711,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 80710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2529:1:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2509:21:104"
                },
                {
                  "body": {
                    "id": 80765,
                    "nodeType": "Block",
                    "src": "2606:532:104",
                    "statements": [
                      {
                        "assignments": [
                          80727
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80727,
                            "mutability": "mutable",
                            "name": "_rewardInfo",
                            "nameLocation": "2684:11:104",
                            "nodeType": "VariableDeclaration",
                            "scope": 80765,
                            "src": "2620:75:104",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken"
                            },
                            "typeName": {
                              "id": 80726,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80725,
                                "name": "IMultiRewardDistributor.RewardWithMToken",
                                "nameLocations": [
                                  "2620:23:104",
                                  "2644:16:104"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 69607,
                                "src": "2620:40:104"
                              },
                              "referencedDeclaration": 69607,
                              "src": "2620:40:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardWithMToken_$69607_storage_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80731,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80728,
                            "name": "outstandingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80702,
                            "src": "2698:18:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory"
                            }
                          },
                          "id": 80730,
                          "indexExpression": {
                            "id": 80729,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80713,
                            "src": "2717:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2698:25:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2620:103:104"
                      },
                      {
                        "body": {
                          "id": 80763,
                          "nodeType": "Block",
                          "src": "2886:242:104",
                          "statements": [
                            {
                              "assignments": [
                                80748
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 80748,
                                  "mutability": "mutable",
                                  "name": "_amounts",
                                  "nameLocation": "2946:8:104",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 80763,
                                  "src": "2904:50:104",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                    "typeString": "struct MultiRewardDistributorCommon.RewardInfo"
                                  },
                                  "typeName": {
                                    "id": 80747,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 80746,
                                      "name": "IMultiRewardDistributor.RewardInfo",
                                      "nameLocations": [
                                        "2904:23:104",
                                        "2928:10:104"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 69590,
                                      "src": "2904:34:104"
                                    },
                                    "referencedDeclaration": 69590,
                                    "src": "2904:34:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$69590_storage_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 80753,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 80749,
                                    "name": "_rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80727,
                                    "src": "2957:11:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                                    }
                                  },
                                  "id": 80750,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2990:7:104",
                                  "memberName": "rewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69606,
                                  "src": "2957:40:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardInfo_$69590_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory[] memory"
                                  }
                                },
                                "id": 80752,
                                "indexExpression": {
                                  "id": 80751,
                                  "name": "rewardsIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80733,
                                  "src": "2998:12:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2957:54:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                  "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2904:107:104"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 80757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 80754,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80748,
                                    "src": "3033:8:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                    }
                                  },
                                  "id": 80755,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3042:11:104",
                                  "memberName": "totalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69585,
                                  "src": "3033:20:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 80756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3056:1:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3033:24:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 80762,
                              "nodeType": "IfStatement",
                              "src": "3029:85:104",
                              "trueBody": {
                                "id": 80761,
                                "nodeType": "Block",
                                "src": "3059:55:104",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 80759,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "3081:14:104",
                                      "subExpression": {
                                        "id": 80758,
                                        "name": "_indexHelper",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80709,
                                        "src": "3081:12:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 80760,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3081:14:104"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80736,
                            "name": "rewardsIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80733,
                            "src": "2798:12:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 80737,
                                "name": "_rewardInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80727,
                                "src": "2813:11:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                                  "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                                }
                              },
                              "id": 80738,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2825:7:104",
                              "memberName": "rewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69606,
                              "src": "2813:19:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$69590_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory[] memory"
                              }
                            },
                            "id": 80739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2833:6:104",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2813:26:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2798:41:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80764,
                        "initializationExpression": {
                          "assignments": [
                            80733
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 80733,
                              "mutability": "mutable",
                              "name": "rewardsIndex",
                              "nameLocation": "2764:12:104",
                              "nodeType": "VariableDeclaration",
                              "scope": 80764,
                              "src": "2759:17:104",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 80732,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2759:4:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 80735,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 80734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2779:1:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2759:21:104"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 80742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2857:14:104",
                            "subExpression": {
                              "id": 80741,
                              "name": "rewardsIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80733,
                              "src": "2857:12:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 80743,
                          "nodeType": "ExpressionStatement",
                          "src": "2857:14:104"
                        },
                        "nodeType": "ForStatement",
                        "src": "2737:391:104"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80716,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80713,
                      "src": "2562:5:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80717,
                        "name": "outstandingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80702,
                        "src": "2570:18:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory"
                        }
                      },
                      "id": 80718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2589:6:104",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2570:25:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2562:33:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80766,
                  "initializationExpression": {
                    "assignments": [
                      80713
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80713,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2551:5:104",
                        "nodeType": "VariableDeclaration",
                        "scope": 80766,
                        "src": "2546:10:104",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80712,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2546:4:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80715,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2559:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2546:14:104"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2597:7:104",
                      "subExpression": {
                        "id": 80720,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80713,
                        "src": "2597:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80722,
                    "nodeType": "ExpressionStatement",
                    "src": "2597:7:104"
                  },
                  "nodeType": "ForStatement",
                  "src": "2541:597:104"
                },
                {
                  "assignments": [
                    80771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80771,
                      "mutability": "mutable",
                      "name": "_result",
                      "nameLocation": "3165:7:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 80855,
                      "src": "3148:24:104",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct BaseMoonwellViews.Rewards[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80769,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80768,
                            "name": "Rewards",
                            "nameLocations": [
                              "3148:7:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79191,
                            "src": "3148:7:104"
                          },
                          "referencedDeclaration": 79191,
                          "src": "3148:7:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rewards_$79191_storage_ptr",
                            "typeString": "struct BaseMoonwellViews.Rewards"
                          }
                        },
                        "id": 80770,
                        "nodeType": "ArrayTypeName",
                        "src": "3148:9:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_storage_$dyn_storage_ptr",
                          "typeString": "struct BaseMoonwellViews.Rewards[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80776,
                        "name": "_indexHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80709,
                        "src": "3189:12:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3175:13:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct BaseMoonwellViews.Rewards memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80773,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80772,
                            "name": "Rewards",
                            "nameLocations": [
                              "3179:7:104"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79191,
                            "src": "3179:7:104"
                          },
                          "referencedDeclaration": 79191,
                          "src": "3179:7:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rewards_$79191_storage_ptr",
                            "typeString": "struct BaseMoonwellViews.Rewards"
                          }
                        },
                        "id": 80774,
                        "nodeType": "ArrayTypeName",
                        "src": "3179:9:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_storage_$dyn_storage_ptr",
                          "typeString": "struct BaseMoonwellViews.Rewards[]"
                        }
                      }
                    },
                    "id": 80777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:27:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct BaseMoonwellViews.Rewards memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3148:54:104"
                },
                {
                  "expression": {
                    "id": 80781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80779,
                      "name": "_indexHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80709,
                      "src": "3213:12:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 80780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3228:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3213:16:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80782,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:16:104"
                },
                {
                  "body": {
                    "id": 80851,
                    "nodeType": "Block",
                    "src": "3304:789:104",
                    "statements": [
                      {
                        "assignments": [
                          80798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80798,
                            "mutability": "mutable",
                            "name": "_rewardInfo",
                            "nameLocation": "3382:11:104",
                            "nodeType": "VariableDeclaration",
                            "scope": 80851,
                            "src": "3318:75:104",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken"
                            },
                            "typeName": {
                              "id": 80797,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80796,
                                "name": "IMultiRewardDistributor.RewardWithMToken",
                                "nameLocations": [
                                  "3318:23:104",
                                  "3342:16:104"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 69607,
                                "src": "3318:40:104"
                              },
                              "referencedDeclaration": 69607,
                              "src": "3318:40:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardWithMToken_$69607_storage_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80802,
                        "initialValue": {
                          "baseExpression": {
                            "id": 80799,
                            "name": "outstandingRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80702,
                            "src": "3396:18:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory"
                            }
                          },
                          "id": 80801,
                          "indexExpression": {
                            "id": 80800,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80784,
                            "src": "3415:5:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3396:25:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                            "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3318:103:104"
                      },
                      {
                        "body": {
                          "id": 80849,
                          "nodeType": "Block",
                          "src": "3584:499:104",
                          "statements": [
                            {
                              "assignments": [
                                80819
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 80819,
                                  "mutability": "mutable",
                                  "name": "_amounts",
                                  "nameLocation": "3644:8:104",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 80849,
                                  "src": "3602:50:104",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                    "typeString": "struct MultiRewardDistributorCommon.RewardInfo"
                                  },
                                  "typeName": {
                                    "id": 80818,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 80817,
                                      "name": "IMultiRewardDistributor.RewardInfo",
                                      "nameLocations": [
                                        "3602:23:104",
                                        "3626:10:104"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 69590,
                                      "src": "3602:34:104"
                                    },
                                    "referencedDeclaration": 69590,
                                    "src": "3602:34:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$69590_storage_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 80824,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 80820,
                                    "name": "_rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80798,
                                    "src": "3655:11:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                                    }
                                  },
                                  "id": 80821,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3688:7:104",
                                  "memberName": "rewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69606,
                                  "src": "3655:40:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardInfo_$69590_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory[] memory"
                                  }
                                },
                                "id": 80823,
                                "indexExpression": {
                                  "id": 80822,
                                  "name": "rewardsIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80804,
                                  "src": "3696:12:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3655:54:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                  "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3602:107:104"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 80828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 80825,
                                    "name": "_amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 80819,
                                    "src": "3731:8:104",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                      "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                    }
                                  },
                                  "id": 80826,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3740:11:104",
                                  "memberName": "totalAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69585,
                                  "src": "3731:20:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 80827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3754:1:104",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3731:24:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 80848,
                              "nodeType": "IfStatement",
                              "src": "3727:342:104",
                              "trueBody": {
                                "id": 80847,
                                "nodeType": "Block",
                                "src": "3757:312:104",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 80842,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 80829,
                                          "name": "_result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 80771,
                                          "src": "3779:7:104",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct BaseMoonwellViews.Rewards memory[] memory"
                                          }
                                        },
                                        "id": 80831,
                                        "indexExpression": {
                                          "id": 80830,
                                          "name": "_indexHelper",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 80709,
                                          "src": "3787:12:104",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "3779:21:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Rewards_$79191_memory_ptr",
                                          "typeString": "struct BaseMoonwellViews.Rewards memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 80833,
                                              "name": "_rewardInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 80798,
                                              "src": "3836:11:104",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                                                "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                                              }
                                            },
                                            "id": 80834,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3848:6:104",
                                            "memberName": "mToken",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 69602,
                                            "src": "3836:18:104",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 80835,
                                              "name": "_amounts",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 80819,
                                              "src": "3880:8:104",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                                "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                              }
                                            },
                                            "id": 80836,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3889:13:104",
                                            "memberName": "emissionToken",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 69583,
                                            "src": "3880:22:104",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 80837,
                                              "name": "_amounts",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 80819,
                                              "src": "3928:8:104",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                                "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                              }
                                            },
                                            "id": 80838,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3937:10:104",
                                            "memberName": "supplySide",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 69587,
                                            "src": "3928:19:104",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "id": 80839,
                                              "name": "_amounts",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 80819,
                                              "src": "3973:8:104",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_RewardInfo_$69590_memory_ptr",
                                                "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory"
                                              }
                                            },
                                            "id": 80840,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3982:10:104",
                                            "memberName": "borrowSide",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 69589,
                                            "src": "3973:19:104",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 80832,
                                          "name": "Rewards",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 79191,
                                          "src": "3803:7:104",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_struct$_Rewards_$79191_storage_ptr_$",
                                            "typeString": "type(struct BaseMoonwellViews.Rewards storage pointer)"
                                          }
                                        },
                                        "id": 80841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3803:211:104",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Rewards_$79191_memory_ptr",
                                          "typeString": "struct BaseMoonwellViews.Rewards memory"
                                        }
                                      },
                                      "src": "3779:235:104",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rewards_$79191_memory_ptr",
                                        "typeString": "struct BaseMoonwellViews.Rewards memory"
                                      }
                                    },
                                    "id": 80843,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3779:235:104"
                                  },
                                  {
                                    "expression": {
                                      "id": 80845,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "4036:14:104",
                                      "subExpression": {
                                        "id": 80844,
                                        "name": "_indexHelper",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 80709,
                                        "src": "4036:12:104",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 80846,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4036:14:104"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 80807,
                            "name": "rewardsIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80804,
                            "src": "3496:12:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 80808,
                                "name": "_rewardInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80798,
                                "src": "3511:11:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardWithMToken_$69607_memory_ptr",
                                  "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory"
                                }
                              },
                              "id": 80809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3523:7:104",
                              "memberName": "rewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69606,
                              "src": "3511:19:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$69590_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct MultiRewardDistributorCommon.RewardInfo memory[] memory"
                              }
                            },
                            "id": 80810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3531:6:104",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3511:26:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3496:41:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80850,
                        "initializationExpression": {
                          "assignments": [
                            80804
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 80804,
                              "mutability": "mutable",
                              "name": "rewardsIndex",
                              "nameLocation": "3462:12:104",
                              "nodeType": "VariableDeclaration",
                              "scope": 80850,
                              "src": "3457:17:104",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 80803,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3457:4:104",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 80806,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 80805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3477:1:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3457:21:104"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 80813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3555:14:104",
                            "subExpression": {
                              "id": 80812,
                              "name": "rewardsIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80804,
                              "src": "3555:12:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 80814,
                          "nodeType": "ExpressionStatement",
                          "src": "3555:14:104"
                        },
                        "nodeType": "ForStatement",
                        "src": "3435:648:104"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80787,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80784,
                      "src": "3260:5:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 80788,
                        "name": "outstandingRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80702,
                        "src": "3268:18:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RewardWithMToken_$69607_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct MultiRewardDistributorCommon.RewardWithMToken memory[] memory"
                        }
                      },
                      "id": 80789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3287:6:104",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3268:25:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3260:33:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80852,
                  "initializationExpression": {
                    "assignments": [
                      80784
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80784,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "3249:5:104",
                        "nodeType": "VariableDeclaration",
                        "scope": 80852,
                        "src": "3244:10:104",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80783,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:4:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80786,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3257:1:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3244:14:104"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3295:7:104",
                      "subExpression": {
                        "id": 80791,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80784,
                        "src": "3295:5:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80793,
                    "nodeType": "ExpressionStatement",
                    "src": "3295:7:104"
                  },
                  "nodeType": "ForStatement",
                  "src": "3239:854:104"
                },
                {
                  "expression": {
                    "id": 80853,
                    "name": "_result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80771,
                    "src": "4110:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct BaseMoonwellViews.Rewards memory[] memory"
                    }
                  },
                  "functionReturnParameters": 80684,
                  "id": 80854,
                  "nodeType": "Return",
                  "src": "4103:14:104"
                }
              ]
            },
            "baseFunctions": [
              80335
            ],
            "documentation": {
              "id": 80675,
              "nodeType": "StructuredDocumentation",
              "src": "2034:65:104",
              "text": "@notice Function to get the user accrued and pendings rewards"
            },
            "functionSelector": "078b0fb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRewards",
            "nameLocation": "2113:14:104",
            "overrides": {
              "id": 80679,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2169:8:104"
            },
            "parameters": {
              "id": 80678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80677,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2145:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 80856,
                  "src": "2137:13:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:29:104"
            },
            "returnParameters": {
              "id": 80684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80683,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80856,
                  "src": "2187:16:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BaseMoonwellViews.Rewards[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80681,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 80680,
                        "name": "Rewards",
                        "nameLocations": [
                          "2187:7:104"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 79191,
                        "src": "2187:7:104"
                      },
                      "referencedDeclaration": 79191,
                      "src": "2187:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rewards_$79191_storage_ptr",
                        "typeString": "struct BaseMoonwellViews.Rewards"
                      }
                    },
                    "id": 80682,
                    "nodeType": "ArrayTypeName",
                    "src": "2187:9:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$79191_storage_$dyn_storage_ptr",
                      "typeString": "struct BaseMoonwellViews.Rewards[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2186:18:104"
            },
            "scope": 80857,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80525,
              "name": "BaseMoonwellViews",
              "nameLocations": [
                "478:17:104"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 80513,
              "src": "478:17:104"
            },
            "id": 80526,
            "nodeType": "InheritanceSpecifier",
            "src": "478:17:104"
          }
        ],
        "canonicalName": "MoonwellViewsV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 80524,
          "nodeType": "StructuredDocumentation",
          "src": "342:107:104",
          "text": " @title Moonwells Views Contract for V1 deployment (pre Basechain deployment)\n @author Moonwell"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80857,
          80513,
          44091
        ],
        "name": "MoonwellViewsV2",
        "nameLocation": "459:15:104",
        "scope": 80858,
        "usedErrors": []
      }
    ],
    "license": "BSD-3-Clause"
  },
  "id": 104
}